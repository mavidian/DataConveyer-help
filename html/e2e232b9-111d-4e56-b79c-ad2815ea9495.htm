<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Glossary</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="glossary" /><meta name="Microsoft.Help.Id" content="e2e232b9-111d-4e56-b79c-ad2815ea9495" /><meta name="Description" content="A set of public types, methods, properties and other elements exposed by a library intended to be used by external software." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Data Conveyer Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\bc1db7e0-6011-496d-8f90-57281169e145.htm" title="Data Conveyer Documentation" tocid="roottoc">Data Conveyer Documentation</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/bc1db7e0-6011-496d-8f90-57281169e145.htm" title="Welcome to Data Conveyer" tocid="bc1db7e0-6011-496d-8f90-57281169e145">Welcome to Data Conveyer</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/a8bd29e8-a28a-4d07-81e1-10abce50f50d.htm" title="Terms of Use" tocid="a8bd29e8-a28a-4d07-81e1-10abce50f50d">Terms of Use</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/9bea5665-8eab-4b91-ae28-fe38d6c6398f.htm" title="Data Conveyer Primer" tocid="9bea5665-8eab-4b91-ae28-fe38d6c6398f">Data Conveyer Primer</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a37f29a4-4918-4efe-b20f-f2526ae6b518.htm" title="API Reference" tocid="a37f29a4-4918-4efe-b20f-f2526ae6b518">API Reference</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="../html/e2e232b9-111d-4e56-b79c-ad2815ea9495.htm" title="Glossary" tocid="e2e232b9-111d-4e56-b79c-ad2815ea9495">Glossary</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Mavidian.png" /></td><td class="titleColumn"><h1>Glossary</h1></td></tr></table><span class="introStyle"></span> <h2>Terms related to Data Conveyer</h2><br /><div class="glossaryLetterBar"><a href="#A">A</a> | <span class="nolink">B</span> | <a href="#C">C</a> | <a href="#D">D</a> | <a href="#E">E</a> | <a href="#F">F</a> | <a href="#G">G</a> | <a href="#H">H</a> | <a href="#I">I</a> | <span class="nolink">J</span> | <a href="#K">K</a> | <span class="nolink">L</span> | <span class="nolink">M</span> | <span class="nolink">N</span> | <a href="#O">O</a> | <a href="#P">P</a> | <span class="nolink">Q</span> | <a href="#R">R</a> | <span class="nolink">S</span> | <a href="#T">T</a> | <a href="#U">U</a> | <a href="#V">V</a> | <span class="nolink">W</span> | <a href="#X">X</a> | <span class="nolink">Y</span> | <span class="nolink">Z</span></div><br /><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="A">A</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="api">API</span>, <span id="api">Application Programming Interface</span></dt><dd class="glossaryEntry"><p>
            A set of public types, methods, properties and other elements exposed by a library
            intended to be used by external software.
          </p></dd><dt class="glossaryEntry"><span id="arb">Arbitrary data</span></dt><dd class="glossaryEntry"><p>
            One of the data kinds natively supported by Data Conveyer. A kind of text data where elements
            (fields) are "cherry-picked" using regular expressions. This may be useful in situations
            where row structure is complex requiring custom rules to identify fields.
            Arbitrary data belongs to a textual data category.
          </p><div class="relatedEntry">See Also: 

					<a href="#csv">Delimited data</a>, <a href="#ff">Fixed width data</a>, <a href="#kw">Keyword data</a>, <a href="#raw">Raw data</a>, <a href="#txtdata">Textual data</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="C">C</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="canonical">Canonical data</span></dt><dd class="glossaryEntry"><p>
            Canonical data (or Uniform data) is the internal data format used by Data Conveyer during transformations.
            During intake and output processing Data Conveyer translates data rows of a given kind (such as Delimited or Keyword data)
            to/from canonical data.
          </p><p>
            Canonical data is structured in a 3 tier hierarchy: cluster, record and item. One cluster contains a collection
            of (zero to many) records and one record contains a collection of (zero to many) items.
          </p><div class="relatedEntry">See Also: 

					<a href="#cluster">Cluster</a>, <a href="#record">Record</a>, <a href="#item">Item</a>, <a href="#uniform">Uniform data</a></div></dd><dt class="glossaryEntry"><span id="cluster">Cluster</span></dt><dd class="glossaryEntry"><p>
            A collection of related records. For example, records related to a family, such as individual members,
            address records, employment data, etc. can be grouped into a cluster.
          </p><p>A cluster is the top tier in the canonical data hierarchy.</p><div class="relatedEntry">See Also: 

					<a href="#canonical">Canonical data</a>, <a href="#record">Record</a>, <a href="#item">Item</a>, <a href="#clusterbound">Clusterbound transformation</a></div></dd><dt class="glossaryEntry"><span id="clusterbound">Clusterbound transformation</span></dt><dd class="glossaryEntry"><p>
            A scenario where transformation is performed one cluster at a time. So, a clustrerbound transformer function accepts
            a cluster as an input parameter and returns a cluster upon return.
          </p><div class="relatedEntry">See Also: 

					<a href="#cluster">Cluster</a>, <a href="#filter">Filter transformation</a>, <a href="#recordbound">Recordbound transformation</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="D">D</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="row">Data row</span></dt><dd class="glossaryEntry"><p>
            A data row (or simply row) refers to a single line of data on intake or output. This is in contrast to a record,
            which is a part of canonical data.
          </p><div class="relatedEntry">See Also: 

					<a href="#record">Record</a>, <a href="#canonical">Canonical data</a></div></dd><dt class="glossaryEntry"><span id="csv">Delimited data</span>, <span id="csv">Separated values</span></dt><dd class="glossaryEntry"><p>
            One of the data kinds natively supported by Data Conveyer. A kind of text data where element values (fields) are
            separated by a given character, such as a comma. For example, dimensions of a 120 by 45 rectangle can be expressed as
            <span class="code">"120,45"</span> (without the quotes).
            Delimited data belongs to a textual data category.
          </p><div class="relatedEntry">See Also: 

					<a href="#arb">Arbitrary data</a>, <a href="#ff">Fixed width data</a>, <a href="#kw">Keyword data</a>, <a href="#raw">Raw data</a>, <a href="#txtdata">Textual data</a></div></dd><dt class="glossaryEntry"><span id="dll">DLL</span>, <span id="dll">Dynamic link library</span></dt><dd class="glossaryEntry"><p>An industry standard file type that contains class libraries, for example DataConveyer.dll.</p></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="E">E</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="extline">External line</span></dt><dd class="glossaryEntry"><p>
            A a unit of data sent to or received from Data Conveyer. Due to a variety of supported data kinds, Data Conveyer employs different mechanisms to read and write data.
            External line allows these mechanisms to be treated using a common pattern. In functional programming lingo, such common pattern is called a discriminated union.</p><div class="relatedEntry">See Also: 

					<a href="#recdata">Record-centric data</a>, <a href="#txtdata">Textual data</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="F">F</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="filter">Filter transformation</span></dt><dd class="glossaryEntry"><p>
            A scenario where transformation does not change the contents of a transformed entity (cluster or record), but
            instead evaluates the entity and possibly removes it. So, a filter predicate function accepts an entity (cluster
            or record) as an input parameter and returns true (to retain the entity) or false (to remove the entity from the output).
          </p><p>Note that there are two separate filter predicate functions: ClusterFilterPredicate and RecordFilterPredicate.</p><div class="relatedEntry">See Also: 

					<a href="#clusterbound">Clusterbound transformation</a>, <a href="#recordbound">Recordbound transformation</a></div></dd><dt class="glossaryEntry"><span id="ff">Fixed width data</span>, <span id="ff">Flat file</span></dt><dd class="glossaryEntry"><p>
            One of the data kinds natively supported by Data Conveyer. A kind of text data where each element (field) is assigned
            a fixed set of character positions in the record. For example, if both length and width fields occupy 3 character positions,
            then dimensions of a 120 by 45 rectangle can be expressed as <span class="code">"120 45"</span> (without the quotes).
            Fixed width data belongs to a textual data category.
          </p><div class="relatedEntry">See Also: 

					<a href="#arb">Arbitrary data</a>, <a href="#csv">Delimited data</a>, <a href="#kw">Keyword data</a>, <a href="#raw">Raw data</a>, <a href="#txtdata">Textual data</a></div></dd><dt class="glossaryEntry"><span id="foot">Foot cluster</span></dt><dd class="glossaryEntry"><p>
            A special empty cluster that can optionally be added during intake after the last cluster created from intake records.
            Data Conveyer guarantees that in transformation phase the foot cluster gets processed after all other clusters (regardless
            of ConcurrencyLevel setting).
          </p><p>The foot cluster can be used during the transformation phase to add records containing data aggregated during processing of prior clusters.</p><div class="relatedEntry">See Also: 

					<a href="#head">Head cluster</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="G">G</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="gcache">Global cache</span></dt><dd class="glossaryEntry"><p>
            Global cache is a central, thread-safe repository of arbitrary key value pairs. Unlike trace bin or property bin objects,
            which are attached to individual records (or clusters), there is only a single global cache object. Elements of global cache
            are available throughout all phases of Data Conveyer processing.
          </p><p>
            In addition, global cache allows signaling to synchronize threads of Data Conveyer processing.
          </p><p>
            For example, global cache may be used to aggregate data during transformation processing, such as counting records that meet
            certain conditions. Due to a multi-threaded nature of Data Conveyer, special care needs to be taken to assure thread-safety
            when manipulating global cache elements.
          </p><div class="relatedEntry">See Also: 

					<a href="#propbin">Property bin</a>, <a href="#tracebin">Trace bin</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="H">H</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="head">Head cluster</span></dt><dd class="glossaryEntry"><p>A special empty cluster that can optionally be added during intake before the first cluster created from intake records.</p><div class="relatedEntry">See Also: 

					<a href="#foot">Foot cluster</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="I">I</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="item">Item</span></dt><dd class="glossaryEntry"><p>
            An item is the bottom tier of the canonical data hierarchy. It represents an element (field) within a record. For
            example, a member record can contain items such as FirstName, LastName or DateOfBirth.
          </p><p>
            Items in Data Conveyer are typed, i.e. they have Type property; for example, DateOfBirth property might
            be of DateTime type. The default item type is string.
          </p><div class="relatedEntry">See Also: 

					<a href="#voiditm">Void item</a>, <a href="#canonical">Canonical data</a>, <a href="#cluster">Cluster</a>, <a href="#record">Record</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="K">K</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="kw">Key value pairs</span>, <span id="kw">Keyword data</span></dt><dd class="glossaryEntry"><p>
            One of the data kinds natively supported by Data Conveyer. A kind of text data where each element (field) consists of
            2 parts separated by an equal sign: a key (field name) and a value; elements in turn are separated by commas. For example,
            dimensions of a 120 by 45 rectangle can be expressed as <span class="code">"length=120,width=45"</span> (without the quotes).
            Keyword data belongs to a textual data category.
          </p><div class="relatedEntry">See Also: 

					<a href="#arb">Arbitrary data</a>, <a href="#csv">Delimited data</a>, <a href="#ff">Fixed width data</a>, <a href="#raw">Raw data</a>, <a href="#txtdata">Textual data</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="O">O</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="orch">Orchestrator</span></dt><dd class="glossaryEntry"><p>
            A key concept and the main component in processing data by Data Conveyer. Upon creation, the orchestrator collects settings
            defining details of the entire process. The settings also involve functions, i.e. executable code.
            During execution, the orchestrator manages component invocations, effectively combining the native and custom code into
            a seamless and unique transformation process.
          </p><div class="relatedEntry">See Also: 

					<a href="#gcache">Global cache</a>, <a href="#tracebin">Trace bin</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="P">P</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="propbin">Property bin</span></dt><dd class="glossaryEntry"><p>
            Property bin is a container of key value pairs that can be attached to records and clusters throughout Data Conveyer processing.
            It allows passing of arbitrary data from one event (function) to another.
          </p><p>
            For example, there may be a common calculation formula required as a part of both transformer as well as router processing. In the
            event that no result of such calculation is kept in the record or cluster, a property bin may be used to carry such data across the
            processing phases and thus avoiding repetitive calculation.
          </p><div class="relatedEntry">See Also: 

					<a href="#gcache">Global cache</a>, <a href="#tracebin">Trace bin</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="R">R</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="raw">Raw data</span></dt><dd class="glossaryEntry"><p>
            One of the data kinds natively supported by Data Conveyer. A kind of text data which is not parsed by Data Conveyer and
            every record is considered to have a single field with the entire contents of a data row. Raw data belongs to a textual data category.
          </p><div class="relatedEntry">See Also: 

					<a href="#arb">Arbitrary data</a>, <a href="#csv">Delimited data</a>, <a href="#ff">Fixed width data</a>, <a href="#kw">Keyword data</a>, <a href="#txtdata">Textual data</a></div></dd><dt class="glossaryEntry"><span id="record">Record</span></dt><dd class="glossaryEntry"><p>
            A record is a defined as a middle tier in the canonical data hierarchy. For example, there may be multiple records in
            a family cluster, where each member represents an individual family member.
          </p><div class="relatedEntry">See Also: 

					<a href="#canonical">Canonical data</a>, <a href="#cluster">Cluster</a>, <a href="#item">Item</a>, <a href="#recordbound">Recordbound transformation</a></div></dd><dt class="glossaryEntry"><span id="recordbound">Recordbound transformation</span></dt><dd class="glossaryEntry"><p>
            A scenario where transformation is performed one record at a time. So, a recordbound transformer function accepts
            a record as an input parameter and returns a record upon return.
          </p><div class="relatedEntry">See Also: 

					<a href="#clusterbound">Clusterbound transformation</a>, <a href="#filter">Filter transformation</a></div></dd><dt class="glossaryEntry"><span id="recdata">Record-centric data</span></dt><dd class="glossaryEntry"><p>
            A category of data kinds, where a unit of data sent to or received from Data Conveyer is a record expressed by a sequence of key-value pairs.
            Examples of this category are XML or JSON data.
          </p><div class="relatedEntry">See Also: 

					<a href="#txtdata">Textual data</a>, <a href="#extline">External line</a>, <a href="#xml">XML data</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="T">T</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="txtdata">Textual data</span></dt><dd class="glossaryEntry"><p>
            A category of data kinds, where a unit of data sent to or received from Data Conveyer is a line of text terminated by a line terminator, such as CR/LF on Windows.
            Most, but not all, data kinds supported by Data Conveyer belong to this category.
          </p><div class="relatedEntry">See Also: 

					<a href="#recdata">Record-centric data</a>, <a href="#extline">External line</a>, <a href="#arb">Arbitrary data</a>, <a href="#csv">Delimited data</a>, <a href="#ff">Fixed width data</a>, <a href="#kw">Keyword data</a>, <a href="#raw">Raw data</a></div></dd><dt class="glossaryEntry"><span id="tracebin">Trace bin</span></dt><dd class="glossaryEntry"><p>
            Trace bin is a container that can be attached to each record on intake, thus allowing to pass arbitrary data elements from one record to
            another. In other words, it is a Data Conveyer's mechanism to manage state on intake, making it possible for subsequent records
            to refer to data from prior records.
          </p><p>
            For example, when processing X12 data, some elements of the interchange envelope (such as ISA06 - Submitter ID) may be required in handling
            subsequent segments. Trace bin allows such elements to be available when needed.
          </p><p>
            Trace bin elements can only be set during intake processing (using RecordInitiator function), but they are accessible in read-only mode throughout
            the Data Conveyer processing.
          </p><div class="relatedEntry">See Also: 

					<a href="#gcache">Global cache</a>, <a href="#propbin">Property bin</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="U">U</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="uniform">Uniform data</span></dt><dd class="glossaryEntry"><p>Same as canonical data.</p><div class="relatedEntry">See Also: 

					<a href="#canonical">Canonical data</a></div></dd><dt class="glossaryEntry"><span id="untypedrec">Untyped record</span></dt><dd class="glossaryEntry"><p>
            A record that is unaware of types of the items it contains. Properties of untyped records that return item values
            (e.g. indexers), always return string values. This is unlike (regular) records, where such properties return strongly typed
            values. Untyped records can be casted to and from (regular) records.
          </p><div class="relatedEntry">See Also: 

					<a href="#record">Record</a>, <a href="#item">Item</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="V">V</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="voiditm">Void item</span></dt><dd class="glossaryEntry"><p>
            A void item is an abstraction used by Data Conveyer to express "non-existing" items. In general, attempts to obtain an item for an absent key in the record result in void items.
            Void items hold default values for their respective types (such as null in case of a string). Therefore, their behavior is typically intuitive requiring no special handling.
          </p><div class="relatedEntry">See Also: 

					<a href="#item">Item</a></div></dd></dl></div><div class="glossaryGroup"><h3 class="glossaryGroupHeading" id="X">X</h3><dl class="glossaryGroupList"><dt class="glossaryEntry"><span id="x12">X12 data</span></dt><dd class="glossaryEntry"><p>
            One of the data kinds natively supported by Data Conveyer. A kind of text data used for electronic data interchange according to
            the ANSI ASC X12 standards. Data Conveyer parses X12 data so that each X12 segment becomes a record and each X12 element
            becomes an item, while X12 transaction typically becomes a cluster. At present, X12 data belongs to a textual data category.
          </p><div class="relatedEntry">See Also: 

					<a href="#txtdata">Textual data</a>, <a href="#record">Record</a>, <a href="#cluster">Cluster</a></div></dd><dt class="glossaryEntry"><span id="xml">XML data</span></dt><dd class="glossaryEntry"><p>
            One of the data kinds natively supported by Data Conveyer. Extensible Markup Language (XML) is defined in W3C's XML 1.0 specification.
            To facilitate translation into canonical data, XML data needs to be in a "tabular" format where elements, such as records and fields,
            are unambiguously defined. XML data belongs to a record-centric data category.
          </p><div class="relatedEntry">See Also: 

					<a href="#recdata">Record-centric data</a>, <a href="#canonical">Canonical data</a></div></dd></dl></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 2016-2019 Mavidian Technologies Limited Liability Company. All Rights Reserved.</p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:contact%40mavidian.com?Subject=Data%20Conveyer%20Documentation">contact@mavidian.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>
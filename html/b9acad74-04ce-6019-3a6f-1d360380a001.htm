<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>OrchestratorConfig Properties</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="OrchestratorConfig class, properties" /><meta name="Microsoft.Help.Id" content="Properties.T:Mavidian.DataConveyer.Orchestrators.OrchestratorConfig" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Mavidian.DataConveyer.Orchestrators" /><meta name="file" content="b9acad74-04ce-6019-3a6f-1d360380a001" /><meta name="guid" content="b9acad74-04ce-6019-3a6f-1d360380a001" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Data Conveyer Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\bc1db7e0-6011-496d-8f90-57281169e145.htm" title="Data Conveyer Documentation" tocid="roottoc">Data Conveyer Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a37f29a4-4918-4efe-b20f-f2526ae6b518.htm" title="API Reference" tocid="a37f29a4-4918-4efe-b20f-f2526ae6b518">API Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a3dd73ed-88ee-29a7-7b04-78e75f7220ab.htm" title="Mavidian.DataConveyer.Orchestrators" tocid="a3dd73ed-88ee-29a7-7b04-78e75f7220ab">Mavidian.DataConveyer.Orchestrators</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/04d12393-dc8d-bb65-d2df-fe7254cc5deb.htm" title="OrchestratorConfig Class" tocid="04d12393-dc8d-bb65-d2df-fe7254cc5deb">OrchestratorConfig Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/b9acad74-04ce-6019-3a6f-1d360380a001.htm" title="OrchestratorConfig Properties" tocid="b9acad74-04ce-6019-3a6f-1d360380a001">OrchestratorConfig Properties</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/bb63efb1-af73-a314-9c57-9d74ede7f06d.htm" title="ActionOnDuplicateKey Property " tocid="bb63efb1-af73-a314-9c57-9d74ede7f06d">ActionOnDuplicateKey Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6dbb891e-c613-fa15-05e7-ea7663fb3e37.htm" title="AllowOnTheFlyInputFields Property " tocid="6dbb891e-c613-fa15-05e7-ea7663fb3e37">AllowOnTheFlyInputFields Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/cf1b45e6-84e4-3292-4caf-6f2b9dab2e16.htm" title="AllowTransformToAlterFields Property " tocid="cf1b45e6-84e4-3292-4caf-6f2b9dab2e16">AllowTransformToAlterFields Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ada2c396-0527-c2bf-2fbd-e0b948cbe959.htm" title="AppendFootCluster Property " tocid="ada2c396-0527-c2bf-2fbd-e0b948cbe959">AppendFootCluster Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6017782e-48d0-5195-8000-02d5d471a2a8.htm" title="ArbitraryInputDefs Property " tocid="6017782e-48d0-5195-8000-02d5d471a2a8">ArbitraryInputDefs Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/88c288df-2bd3-7191-dc83-136b9702bcd1.htm" title="ArbitraryOutputDefs Property " tocid="88c288df-2bd3-7191-dc83-136b9702bcd1">ArbitraryOutputDefs Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e1976db1-9354-6ba2-7609-ae600e18e070.htm" title="AsyncIntake Property " tocid="e1976db1-9354-6ba2-7609-ae600e18e070">AsyncIntake Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b8d99be5-1806-369d-da46-a83b4ce4055c.htm" title="AsyncIntakeSupplier Property " tocid="b8d99be5-1806-369d-da46-a83b4ce4055c">AsyncIntakeSupplier Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8db6a3e3-2150-f25a-db54-41e2a634ae79.htm" title="AsyncOutput Property " tocid="8db6a3e3-2150-f25a-db54-41e2a634ae79">AsyncOutput Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/af82f01b-bd3b-dd82-3e66-8786fd4da2de.htm" title="AsyncOutputConsumer Property " tocid="af82f01b-bd3b-dd82-3e66-8786fd4da2de">AsyncOutputConsumer Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9aaddf28-428e-829d-6350-f310ff42d6c5.htm" title="AsyncTextIntakeSupplier Property " tocid="9aaddf28-428e-829d-6350-f310ff42d6c5">AsyncTextIntakeSupplier Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/90990062-f149-d50f-a65d-1c0c5d06c3d8.htm" title="AsyncTextOutputConsumer Property " tocid="90990062-f149-d50f-a65d-1c0c5d06c3d8">AsyncTextOutputConsumer Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm" title="BufferSize Property " tocid="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db">BufferSize Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/18feb223-1144-84c3-6514-f80301742b89.htm" title="CloseLoggerOnDispose Property " tocid="18feb223-1144-84c3-6514-f80301742b89">CloseLoggerOnDispose Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c23d8ed1-98a7-5d64-442d-80401c64247c.htm" title="ClusterboundTransformer Property " tocid="c23d8ed1-98a7-5d64-442d-80401c64247c">ClusterboundTransformer Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6917990d-b642-cca2-b896-7f48b185296d.htm" title="ClusterFilterPredicate Property " tocid="6917990d-b642-cca2-b896-7f48b185296d">ClusterFilterPredicate Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d68e844c-3622-d074-f890-14cceba69557.htm" title="ClusterMarker Property " tocid="d68e844c-3622-d074-f890-14cceba69557">ClusterMarker Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/69304476-149c-7a60-5f05-8cb8f6652b75.htm" title="ClusterRouter Property " tocid="69304476-149c-7a60-5f05-8cb8f6652b75">ClusterRouter Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8db1d209-168f-65b7-f112-a22af8ffa758.htm" title="ClusterSyncInterval Property " tocid="8db1d209-168f-65b7-f112-a22af8ffa758">ClusterSyncInterval Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/35ee646c-094f-6375-9411-fb4e6d367b4a.htm" title="ConcurrencyLevel Property " tocid="35ee646c-094f-6375-9411-fb4e6d367b4a">ConcurrencyLevel Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ad64d5ba-3218-de58-59e0-b7e7bcce6b96.htm" title="ConfigName Property " tocid="ad64d5ba-3218-de58-59e0-b7e7bcce6b96">ConfigName Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/47b75aee-763d-57f5-65f6-04856f4f7fc5.htm" title="DataConveyerInfo Property " tocid="47b75aee-763d-57f5-65f6-04856f4f7fc5">DataConveyerInfo Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d67537a5-e74a-e0c3-c434-0c4d0778e2ee.htm" title="DefaultInputFieldWidth Property " tocid="d67537a5-e74a-e0c3-c434-0c4d0778e2ee">DefaultInputFieldWidth Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5196cfc7-efae-81ea-a230-4983834ca0be.htm" title="DefaultOutputFieldWidth Property " tocid="5196cfc7-efae-81ea-a230-4983834ca0be">DefaultOutputFieldWidth Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/dc4c1d23-56bc-0a93-0773-496de85bbba3.htm" title="DefaultX12FieldDelimiter Property " tocid="dc4c1d23-56bc-0a93-0773-496de85bbba3">DefaultX12FieldDelimiter Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/926e9817-d77d-032f-10b3-d5992085e16e.htm" title="DefaultX12SegmentDelimiter Property " tocid="926e9817-d77d-032f-10b3-d5992085e16e">DefaultX12SegmentDelimiter Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1c81e13a-14fd-b0fd-f57c-03bb68f3b136.htm" title="DeferOutput Property " tocid="1c81e13a-14fd-b0fd-f57c-03bb68f3b136">DeferOutput Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5b52a3d3-7f3f-85d9-abcd-b1a709ba071d.htm" title="DeferTransformation Property " tocid="5b52a3d3-7f3f-85d9-abcd-b1a709ba071d">DeferTransformation Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/32d5f905-794a-593b-c197-e3a32cdd39f1.htm" title="EagerInitialization Property " tocid="32d5f905-794a-593b-c197-e3a32cdd39f1">EagerInitialization Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/edbadc3e-5872-e494-21df-f83fe88b6daa.htm" title="ErrorOccurredHandler Property " tocid="edbadc3e-5872-e494-21df-f83fe88b6daa">ErrorOccurredHandler Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e3027028-f4d1-1f23-f235-603c40dbccd4.htm" title="ExcludeExtraneousFields Property " tocid="e3027028-f4d1-1f23-f235-603c40dbccd4">ExcludeExtraneousFields Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9e700b6c-0837-f24d-5da2-5bd4ce055135.htm" title="ExcludeItemsMissingPrefix Property " tocid="9e700b6c-0837-f24d-5da2-5bd4ce055135">ExcludeItemsMissingPrefix Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2060aefd-96d9-5761-f0cb-5436e51c4f53.htm" title="ExplicitTypeDefinitions Property " tocid="2060aefd-96d9-5761-f0cb-5436e51c4f53">ExplicitTypeDefinitions Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2e7d42d3-8426-0fa8-9c53-cdda797c7b5a.htm" title="GlobalCacheElements Property " tocid="2e7d42d3-8426-0fa8-9c53-cdda797c7b5a">GlobalCacheElements Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/af7e75cd-946b-7122-1863-058994b03e3c.htm" title="HeadersInFirstInputRow Property " tocid="af7e75cd-946b-7122-1863-058994b03e3c">HeadersInFirstInputRow Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/22cd49e1-52d1-0c18-ad88-ed29a613755a.htm" title="HeadersInFirstOutputRow Property " tocid="22cd49e1-52d1-0c18-ad88-ed29a613755a">HeadersInFirstOutputRow Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c8ef008d-8051-63fb-3f0f-f6101905b2d4.htm" title="InputDataKind Property " tocid="c8ef008d-8051-63fb-3f0f-f6101905b2d4">InputDataKind Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/bbfdec26-37e6-ae8e-801d-75d54b299b5a.htm" title="InputFields Property " tocid="bbfdec26-37e6-ae8e-801d-75d54b299b5a">InputFields Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0ba31ba4-7c51-96c5-0b77-fe5b8c551746.htm" title="InputFieldSeparator Property " tocid="0ba31ba4-7c51-96c5-0b77-fe5b8c551746">InputFieldSeparator Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5171fa2f-d3fe-b2d0-6211-92180c055af7.htm" title="InputFileName Property " tocid="5171fa2f-d3fe-b2d0-6211-92180c055af7">InputFileName Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/da508f34-03f2-4da7-1ddd-eae99f7d84f5.htm" title="InputFileNames Property " tocid="da508f34-03f2-4da7-1ddd-eae99f7d84f5">InputFileNames Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0cb14e72-fa1d-5b81-581a-8f323e149363.htm" title="InputHeadersRepeated Property " tocid="0cb14e72-fa1d-5b81-581a-8f323e149363">InputHeadersRepeated Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/cf574151-12e0-26fe-f40e-7ef73ff4d1aa.htm" title="InputKeyPrefix Property " tocid="cf574151-12e0-26fe-f40e-7ef73ff4d1aa">InputKeyPrefix Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/310ead30-4b34-2237-38f8-9dc807c34ee3.htm" title="IntakeBufferFactor Property " tocid="310ead30-4b34-2237-38f8-9dc807c34ee3">IntakeBufferFactor Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0b504432-e849-91e2-fce7-fed9f902ded9.htm" title="IntakeDisposer Property " tocid="0b504432-e849-91e2-fce7-fed9f902ded9">IntakeDisposer Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0a631825-7a7e-2725-1eb6-e7a5cad0c6fe.htm" title="IntakeInitializer Property " tocid="0a631825-7a7e-2725-1eb6-e7a5cad0c6fe">IntakeInitializer Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ef2cbd01-10b7-8651-ae16-387b857e53dc.htm" title="IntakeReader Property " tocid="ef2cbd01-10b7-8651-ae16-387b857e53dc">IntakeReader Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fca3d59e-4c8d-1259-6b0b-72a0409db084.htm" title="IntakeReaders Property " tocid="fca3d59e-4c8d-1259-6b0b-72a0409db084">IntakeReaders Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/705afb55-cddd-890e-efc2-2bc637365657.htm" title="IntakeRecordLimit Property " tocid="705afb55-cddd-890e-efc2-2bc637365657">IntakeRecordLimit Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d0964933-c9df-f7d7-4214-a03368264589.htm" title="IntakeSupplier Property " tocid="d0964933-c9df-f7d7-4214-a03368264589">IntakeSupplier Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/73dad4d7-ac76-f2f7-bcc8-a9b50f0619b1.htm" title="LeaderContents Property " tocid="73dad4d7-ac76-f2f7-bcc8-a9b50f0619b1">LeaderContents Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/aaf9d354-06b8-aa37-2f39-015b987b3be6.htm" title="MarkerStartsCluster Property " tocid="aaf9d354-06b8-aa37-2f39-015b987b3be6">MarkerStartsCluster Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/92b92a61-de1b-64d8-1ec3-767e642276b4.htm" title="OutputBufferFactor Property " tocid="92b92a61-de1b-64d8-1ec3-767e642276b4">OutputBufferFactor Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/925463ba-ed7f-0aa6-b51c-ee9fc0e552d5.htm" title="OutputConsumer Property " tocid="925463ba-ed7f-0aa6-b51c-ee9fc0e552d5">OutputConsumer Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/be0694f4-b3c0-1603-888b-29c080c5c446.htm" title="OutputDataKind Property " tocid="be0694f4-b3c0-1603-888b-29c080c5c446">OutputDataKind Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/db3fb010-5339-e15d-c5f8-881ce91dae84.htm" title="OutputDisposer Property " tocid="db3fb010-5339-e15d-c5f8-881ce91dae84">OutputDisposer Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1ba76e8f-55b3-aa84-aeac-114e06f4d8e2.htm" title="OutputFields Property " tocid="1ba76e8f-55b3-aa84-aeac-114e06f4d8e2">OutputFields Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6490499e-b55b-df27-0803-2506cc100ab9.htm" title="OutputFieldSeparator Property " tocid="6490499e-b55b-df27-0803-2506cc100ab9">OutputFieldSeparator Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/69282527-0139-6974-c2d6-1f61b4edf2a1.htm" title="OutputFileName Property " tocid="69282527-0139-6974-c2d6-1f61b4edf2a1">OutputFileName Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5f3723ee-97f2-52d5-fbe8-e5e35737d938.htm" title="OutputFileNames Property " tocid="5f3723ee-97f2-52d5-fbe8-e5e35737d938">OutputFileNames Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/56e8034c-033e-7b16-4aea-fa67d16fc68b.htm" title="OutputInitializer Property " tocid="56e8034c-033e-7b16-4aea-fa67d16fc68b">OutputInitializer Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f984ded5-6a7f-f758-f644-c806e24bca6c.htm" title="OutputKeyPrefix Property " tocid="f984ded5-6a7f-f758-f644-c806e24bca6c">OutputKeyPrefix Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7682a55e-457f-0133-f127-de04cd081c3b.htm" title="OutputWriter Property " tocid="7682a55e-457f-0133-f127-de04cd081c3b">OutputWriter Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e36bae12-4129-b25c-3213-3adf323e7ae4.htm" title="OutputWriters Property " tocid="e36bae12-4129-b25c-3213-3adf323e7ae4">OutputWriters Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/98ed62f1-90f6-e962-1629-0593c6709773.htm" title="PhaseFinishedHandler Property " tocid="98ed62f1-90f6-e962-1629-0593c6709773">PhaseFinishedHandler Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e43a33f0-17c3-8242-c4b4-7646bfb1fa0a.htm" title="PhaseStartingHandler Property " tocid="e43a33f0-17c3-8242-c4b4-7646bfb1fa0a">PhaseStartingHandler Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/aa76f38f-baff-dc6a-4849-d4ba87888bd1.htm" title="PrependHeadCluster Property " tocid="aa76f38f-baff-dc6a-4849-d4ba87888bd1">PrependHeadCluster Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4bab7c11-5845-8fa7-3d02-23d9a612b14f.htm" title="ProgressChangedHandler Property " tocid="4bab7c11-5845-8fa7-3d02-23d9a612b14f">ProgressChangedHandler Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f0455ab6-fa49-bb9a-00ef-15277089f022.htm" title="ProgressInterval Property " tocid="f0455ab6-fa49-bb9a-00ef-15277089f022">ProgressInterval Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/55c9ade5-2338-437d-1ecf-697247f095aa.htm" title="PropertyBinEntities Property " tocid="55c9ade5-2338-437d-1ecf-697247f095aa">PropertyBinEntities Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b5ecdf86-99ae-2f24-f21e-44ee77b68b45.htm" title="QuotationMode Property " tocid="b5ecdf86-99ae-2f24-f21e-44ee77b68b45">QuotationMode Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/31007855-3ca5-8949-f960-6939d6c18c1c.htm" title="RecordboundTransformer Property " tocid="31007855-3ca5-8949-f960-6939d6c18c1c">RecordboundTransformer Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6738392e-694b-ba3c-0861-d114c5cc7cad.htm" title="RecordFilterPredicate Property " tocid="6738392e-694b-ba3c-0861-d114c5cc7cad">RecordFilterPredicate Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/09a5896a-02ef-e170-3a39-90bc3e1b44ff.htm" title="RecordInitiator Property " tocid="09a5896a-02ef-e170-3a39-90bc3e1b44ff">RecordInitiator Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e8f1a9ae-ec5e-e1df-6f80-4ac5b3018ad5.htm" title="RecordRouter Property " tocid="e8f1a9ae-ec5e-e1df-6f80-4ac5b3018ad5">RecordRouter Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4e69b3f3-dd04-ca51-1b59-b55a877af902.htm" title="RepeatLeaders Property " tocid="4e69b3f3-dd04-ca51-1b59-b55a877af902">RepeatLeaders Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/84791243-69f4-4a67-a2af-82bbd171a484.htm" title="RepeatOutputHeaders Property " tocid="84791243-69f4-4a67-a2af-82bbd171a484">RepeatOutputHeaders Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2bfd3eaa-f241-3e80-ec57-c8ed0a3310e1.htm" title="RepeatTrailers Property " tocid="2bfd3eaa-f241-3e80-ec57-c8ed0a3310e1">RepeatTrailers Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/79e45b3c-23e2-3d55-32be-94d91257ec51.htm" title="ReportProgress Property " tocid="79e45b3c-23e2-3d55-32be-94d91257ec51">ReportProgress Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ecdd0c23-bc48-9c82-79c0-b71221563f84.htm" title="RetainQuotes Property " tocid="ecdd0c23-bc48-9c82-79c0-b71221563f84">RetainQuotes Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/93717839-e093-50bb-b21f-bf4f6fe116d0.htm" title="RouterType Property " tocid="93717839-e093-50bb-b21f-bf4f6fe116d0">RouterType Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7.htm" title="TextIntakeSupplier Property " tocid="fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7">TextIntakeSupplier Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6a9be6bf-d527-c86a-2fdc-e501a528091a.htm" title="TextOutputConsumer Property " tocid="6a9be6bf-d527-c86a-2fdc-e501a528091a">TextOutputConsumer Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5912fbd7-9565-4e0b-23ab-ff18bcf9f82f.htm" title="TimeLimit Property " tocid="5912fbd7-9565-4e0b-23ab-ff18bcf9f82f">TimeLimit Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e2ccc5eb-80d3-fef8-a169-8230f010b9e4.htm" title="TrailerContents Property " tocid="e2ccc5eb-80d3-fef8-a169-8230f010b9e4">TrailerContents Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c2fb2589-c230-2f3f-d041-7a38a5a4fd1d.htm" title="TransformBufferFactor Property " tocid="c2fb2589-c230-2f3f-d041-7a38a5a4fd1d">TransformBufferFactor Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c125a74f-d208-d540-d050-6b9f41ba407c.htm" title="TransformerType Property " tocid="c125a74f-d208-d540-d050-6b9f41ba407c">TransformerType Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/432d68aa-e827-528c-cb90-6b579b2f9d84.htm" title="TrimInputValues Property " tocid="432d68aa-e827-528c-cb90-6b579b2f9d84">TrimInputValues Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f505e930-f139-60ce-b7ec-28f2f26ec154.htm" title="TrimOutputValues Property " tocid="f505e930-f139-60ce-b7ec-28f2f26ec154">TrimOutputValues Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e3d51c4b-3110-47b3-ffd9-c852396dc2b2.htm" title="TypeDefiner Property " tocid="e3d51c4b-3110-47b3-ffd9-c852396dc2b2">TypeDefiner Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/aedd3e4d-dcaf-a394-4172-fe4497a400d8.htm" title="UniversalTransformer Property " tocid="aedd3e4d-dcaf-a394-4172-fe4497a400d8">UniversalTransformer Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/dd4afb07-48b0-9524-14a0-93ed2169af49.htm" title="XmlJsonIntakeSettings Property " tocid="dd4afb07-48b0-9524-14a0-93ed2169af49">XmlJsonIntakeSettings Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b0a7bc2a-2c8a-26f5-e139-73d8f4eae1b2.htm" title="XmlJsonOutputSettings Property " tocid="b0a7bc2a-2c8a-26f5-e139-73d8f4eae1b2">XmlJsonOutputSettings Property </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Mavidian.png" /></td><td class="titleColumn"><h1>OrchestratorConfig Properties</h1></td></tr></table><span class="introStyle"></span> <p>The <a href="04d12393-dc8d-bb65-d2df-fe7254cc5deb.htm">OrchestratorConfig</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="bb63efb1-af73-a314-9c57-9d74ede7f06d.htm">ActionOnDuplicateKey</a></td><td><div class="summary">
            Action to take in case the key is repeated on a single record: IgnoreItem, ExcludeRecord or AssignDefaultKey. Default action is IgnoreItem.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6dbb891e-c613-fa15-05e7-ea7663fb3e37.htm">AllowOnTheFlyInputFields</a></td><td><div class="summary">
            False (default) means no new fields beyond those defined in <a href="bbfdec26-37e6-ae8e-801d-75d54b299b5a.htm">InputFields</a> (or 1st row if applicable) are allowed.  Any additional fields encountered during intake processing will be excluded.
            True means that new fields can be added on the fly in subsequent data records; their names and types are determined according to standard rules.
            In case of Keyword data, default setting (false) requires all fields (keys) to be listed in the <a href="bbfdec26-37e6-ae8e-801d-75d54b299b5a.htm">InputFields</a> setting (keys not listed there will be excluded, so in absence of <a href="bbfdec26-37e6-ae8e-801d-75d54b299b5a.htm">InputFields</a> no fields will be present).
            True setting allows inclusion of all fields for Keyword data.
            This setting is ignored in case of the following data kinds on intake:
            <ul><li><strong>Flat</strong> - Flat data fields are determined up-front from either <a href="bbfdec26-37e6-ae8e-801d-75d54b299b5a.htm">InputFields</a> setting or the first row.</li><li><strong>Arbitrary</strong> - Arbitrary data can only be determined from the <a href="6017782e-48d0-5195-8000-02d5d471a2a8.htm">ArbitraryInputDefs</a> setting.</li><li><strong>X12</strong> - In case of X12 data, fields are added dynamically from X12 segments, so that this setting is assumed to be true.</li></ul></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="cf1b45e6-84e4-3292-4caf-6f2b9dab2e16.htm">AllowTransformToAlterFields</a></td><td><div class="summary">
            If true, fields (items) can be added to and removed from records during transformations.
            If false (default), no fields can be added/removed during transformations (although field values can still be update and records/clusters can be cloned).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="ada2c396-0527-c2bf-2fbd-e0b948cbe959.htm">AppendFootCluster</a></td><td><div class="summary">
            True causes Data Conveyer to add an extra empty cluster (so called foot cluster) after the last cluster formed from intake records.
            False (default) means no foot cluster will be added at the end of intake.
            The foot cluster always has a <a href="0f110a8a-6eb6-76e1-2d7b-105aaca11076.htm">StartRecNo</a> of -1 (<a href="00d2eee7-b410-d107-f760-6f3abc9d3a07.htm">FootClusterRecNo</a>) and <a href="ea498d06-1b4d-040f-2116-f206f9dee09a.htm">StartSourceNo</a> of 1. If trailer contents is present, it will follow the foot cluster on output.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6017782e-48d0-5195-8000-02d5d471a2a8.htm">ArbitraryInputDefs</a></td><td><div class="summary">
            Array of elements that define fields to be extracted from input lines.
            Each element is a string consisting of 2 parts separated by a space: a field name followed by a regular expression containing formula to extract a value from input line.
            Data Conveyer will extract the fields in the order they are specified in this setting.
            This setting is mandatory for <a href="c8ef008d-8051-63fb-3f0f-f6101905b2d4.htm">InputDataKind</a> of Arbitrary; if specified for other data kinds, it is ignored.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="88c288df-2bd3-7191-dc83-136b9702bcd1.htm">ArbitraryOutputDefs</a></td><td><div class="summary">
            Array of strings that define data to be placed in output lines.
            Each string contains a fragment of output line and may contain a single token in a form of {field}, where
            such token will be substituted in the output record by the actual value of the field.
            In order to include brace characters in the output, they need to be escaped (preceded by a backslash), like so: \{ and \}.
            Note though that backslash characters inside C# string literals may need to be escaped themselves.
            For example: "\\{ "Format":"JSON" \\}" or @"\{ "Format":"JSON" \}" will both output identical JSON string.
            This setting is mandatory for <a href="be0694f4-b3c0-1603-888b-29c080c5c446.htm">OutputDataKind</a> of Arbitrary; if specified for other data kinds, it is ignored.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e1976db1-9354-6ba2-7609-ae600e18e070.htm">AsyncIntake</a></td><td><div class="summary">
            True will cause Data Conveyer to perform intake operations asynchronously (e.g. it will call <a href="9aaddf28-428e-829d-6350-f310ff42d6c5.htm">AsyncTextIntakeSupplier</a> or <a href="b8d99be5-1806-369d-da46-a83b4ce4055c.htm">AsyncIntakeSupplier</a> function if provided, not the <a href="fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7.htm">TextIntakeSupplier</a> or <a href="d0964933-c9df-f7d7-4214-a03368264589.htm">IntakeSupplier</a> function).
            False (default) will cause Data Conveyer to perform intake operations synchronously, in which case the <a href="fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7.htm">TextIntakeSupplier</a> or <a href="d0964933-c9df-f7d7-4214-a03368264589.htm">IntakeSupplier</a> function is called (if provided).
            Note that Data Conveyer performs such synchronous intake on a dedicated thread to prevent a possible deadlock condition.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="b8d99be5-1806-369d-da46-a83b4ce4055c.htm">AsyncIntakeSupplier</a></td><td><div class="summary">
             An asynchronous function that supplies a task with (a promise of) a tuple containing an <a href="8e08f4d2-aa58-1594-e4ef-425c967be733.htm">ExternalLine</a> object (an input line to be fed into Data Conveyer) and the source number (1-based) (Func&lt;IGlobalCache, Task&lt;Tuple&lt;string,int&gt;&gt;&gt;).
             Data Conveyer calls this function when <a href="e1976db1-9354-6ba2-7609-ae600e18e070.htm">AsyncIntake</a> is true (providing a single parameter - <a href="b9a1fa9f-55cc-9b8e-8ccd-6dc5b69dcc0f.htm">IGlobalCache</a>) in succession until null is received.
             When end of data is reached (i.e. intake sources are depleted), the function must return a task with null result (end of data mark), which will initiate processing shutdown with a status of <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">IntakeDepleted</a>.
             Note the difference between null tuples (end of data marks) and tuples containing null strings (ignored by Data Conveyer).
             Any returned tuples that contain null <a href="8e08f4d2-aa58-1594-e4ef-425c967be733.htm">ExternalLine</a> objects are ignored by Data Conveyer; to send an empty line, a tuple containing an empty object (e.g. an empty string) needs to be returned.
             If not defined, Data Conveyer assumes default <a href="b8d99be5-1806-369d-da46-a83b4ce4055c.htm">AsyncIntakeSupplier</a> function that returns no data, but a task with an end of data result, i.e.:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBDA0VC0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0VC0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBDA0VC0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0VC0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBDA0VC0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBDA0VC0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBDA0VC0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">gc =&gt; Task.FromResult&lt;Tuple&lt;<span class="highlight-keyword">string</span>, <span class="highlight-keyword">int</span>&gt;&gt;(<span class="highlight-keyword">null</span>)</pre></div><div id="ID0EBDA0VC0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(gc) Task.FromResult(<span class="highlight-keyword">Of</span> Tuple(<span class="highlight-keyword">Of</span> <span class="highlight-keyword">String</span>, <span class="highlight-keyword">Integer</span>))(<span class="highlight-keyword">Nothing</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBDA0VC0CDA");</script>
             Any exception thrown by this function will cause the process shutdown with a completion status of <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">Failed</a>.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="8db6a3e3-2150-f25a-db54-41e2a634ae79.htm">AsyncOutput</a></td><td><div class="summary">
            True will cause Data Conveyer to perform output operations asynchronously (i.e. it will call <a href="90990062-f149-d50f-a65d-1c0c5d06c3d8.htm">AsyncTextOutputConsumer</a> or <a href="af82f01b-bd3b-dd82-3e66-8786fd4da2de.htm">AsyncOutputConsumer</a> function if provided, not the <a href="6a9be6bf-d527-c86a-2fdc-e501a528091a.htm">TextOutputConsumer</a> or <a href="925463ba-ed7f-0aa6-b51c-ee9fc0e552d5.htm">OutputConsumer</a> function).
            False (default) to perform intake operations synchronously, in which case the <a href="6a9be6bf-d527-c86a-2fdc-e501a528091a.htm">TextOutputConsumer</a> or <a href="925463ba-ed7f-0aa6-b51c-ee9fc0e552d5.htm">OutputConsumer</a> function is called (if provided).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="af82f01b-bd3b-dd82-3e66-8786fd4da2de.htm">AsyncOutputConsumer</a></td><td><div class="summary">
             An asynchronous action (Task returning function) that consumes a tuple containing a <a href="8e08f4d2-aa58-1594-e4ef-425c967be733.htm">ExternalLine</a> object (a single output line received from Data Conveyer) and the target number (Func&lt;Tuple&lt;string, int&gt;, Task&gt;).
             Reference to global cache (<a href="b9a1fa9f-55cc-9b8e-8ccd-6dc5b69dcc0f.htm">IGlobalCache</a>) is passed as the second parameter.
             The function is intended for use in case of a long-running operation to consume the output line, e.g. await LongRunningOperation(..).
             Data Conveyer calls this action (when <a href="8db6a3e3-2150-f25a-db54-41e2a634ae79.htm">AsyncOutput</a> is true) in succession passing (tuples with) the output lines one at a time.
             The last tuple sent by Data Conveyer is always null (end of data mark).
             If not defined, Data Conveyer assumes default <a href="af82f01b-bd3b-dd82-3e66-8786fd4da2de.htm">AsyncOutputConsumer</a> action that ignores data passed to it, i.e.:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBDA0TC0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0TC0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBDA0TC0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0TC0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBDA0TC0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBDA0TC0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBDA0TC0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">(tpl, gc) =&gt; Task.CompletedTask</pre></div><div id="ID0EBDA0TC0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(tpl, gc) Task.CompletedTask</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBDA0TC0CDA");</script>
             Any exception thrown by this action will cause the process shutdown with a <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">CompletionStatus</a> of Failed.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="9aaddf28-428e-829d-6350-f310ff42d6c5.htm">AsyncTextIntakeSupplier</a></td><td><div class="summary">
             An asynchronous function that supplies a task promising contents of a single text line to be fed into Data Conveyer. (Func&lt;Task&lt;string&gt;&gt;).
             When end of data is reached, the function must return null (end of data mark).
             The <a href="9aaddf28-428e-829d-6350-f310ff42d6c5.htm">AsyncTextIntakeSupplier</a> function is a simplified version of the <a href="b8d99be5-1806-369d-da46-a83b4ce4055c.htm">AsyncIntakeSupplier</a> function where the following restrictions apply:
             <ul><li>Input data kind is textual such as <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Delimited</a>, <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Flat</a>, etc. (and not for example <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a>).</li><li>All lines are associated with a single source.</li><li>No access to global cache.</li></ul></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="90990062-f149-d50f-a65d-1c0c5d06c3d8.htm">AsyncTextOutputConsumer</a></td><td><div class="summary">
             An asynchronous action (Task returning function) that consumes a single line of text received from Data Conveyer. (Func&lt;string, Task&gt;).
             The last line sent by Data Conveyer is always null (end of data mark).
             The <a href="90990062-f149-d50f-a65d-1c0c5d06c3d8.htm">AsyncTextOutputConsumer</a> action is a simplified version of the <a href="af82f01b-bd3b-dd82-3e66-8786fd4da2de.htm">AsyncOutputConsumer</a> action where the following restrictions apply:
             <ul><li>Output data kind is textual such as <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Delimited</a>, <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Flat</a>, etc. (and not for example <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a>).</li><li>All lines are sent to a single target (regardless of the target determined by the <a href="69304476-149c-7a60-5f05-8cb8f6652b75.htm">ClusterRouter</a> function).</li><li>No access to global cache.</li></ul></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a></td><td><div class="summary">
            Capacity of a transformer buffer defined as a maximum number of clusters to be held unprocessed by Data Conveyer.
            This setting can be used to control memory consumption of Data Conveyer.
            Default value is -1, which means no limit.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="18feb223-1144-84c3-6514-f80301742b89.htm">CloseLoggerOnDispose</a></td><td><div class="summary"><p>
            True (default) causes the logger to close (stop logging) when the orchestrator object is disposed.
            False keeps the logger open beyond the lifespan of the orchestrator object, which may be helpful in certain troubleshooting scenarios (e.g. to avoid System.ObjectDisposedException: Cannot write to a closed TextWriter when using LogFile logger).
            It is recommended that the <a href="18feb223-1144-84c3-6514-f80301742b89.htm">CloseLoggerOnDispose</a> remains at its default value of true, except for troubleshooting scenarios.
            </p><p>
            The <a href="18feb223-1144-84c3-6514-f80301742b89.htm">CloseLoggerOnDispose</a> setting also affects the behavior of the <a href="3f13eac3-dc85-a96f-e68f-4d2cb543f9ae.htm">SaveConfig(String)</a> method in case an error occurs:
            if true, then the error gets logged and the logger is closed (stops logging); if false, then the the error gets logged and the logger remains open.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="c23d8ed1-98a7-5d64-442d-80401c64247c.htm">ClusterboundTransformer</a></td><td><div class="summary">
            A function that takes a single cluster and returns a single cluster; specific to <a href="ab960898-7287-fb62-44a2-925659cb5b10.htm">Clusterbound</a> transformer type.
            In case the function returns null (Nothing in Visual Basic), the cluster will be filtered out.
            This makes the <a href="ab960898-7287-fb62-44a2-925659cb5b10.htm"> and </a><a href="6917990d-b642-cca2-b896-7f48b185296d.htm">ClusterFilterPredicate</a> a special case of 
            <a href="ab960898-7287-fb62-44a2-925659cb5b10.htm"> and </a><a href="c23d8ed1-98a7-5d64-442d-80401c64247c.htm">ClusterboundTransformer</a> where unfiltered clusters are passed through.
            If not supplied, a default pass-through function is used that passes input cluster to output, i.e.:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBA0OC0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBA0OC0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBBA0OC0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBA0OC0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBA0OC0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBA0OC0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBA0OC0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">clstr =&gt; clstr</pre></div><div id="ID0EBBA0OC0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(clstr) clstr</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBA0OC0CDA");</script>
             Any exception thrown by this function will cause the process shutdown (CompletionStatus of Failed).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6917990d-b642-cca2-b896-7f48b185296d.htm">ClusterFilterPredicate</a></td><td><div class="summary">
            A predicate (boolean function) that takes a single cluster and returns true to accept the cluster or false to reject it; specific to <a href="ab960898-7287-fb62-44a2-925659cb5b10.htm">ClusterFilter</a> transformer type.
            If not supplied, a default pass-through predicate is used that always returns true, i.e.:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBA0NC0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBA0NC0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBBA0NC0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBA0NC0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBA0NC0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBA0NC0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBA0NC0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">clstr =&gt; <span class="highlight-keyword">true</span></pre></div><div id="ID0EBBA0NC0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(clstr) <span class="highlight-keyword">True</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBA0NC0CDA");</script>
             Any exception thrown by this function will cause the process shutdown (CompletionStatus of Failed).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="d68e844c-3622-d074-f890-14cceba69557.htm">ClusterMarker</a></td><td><div class="summary">
            A predicate (boolean function) to identify records that cause cluster splits (either starting a new cluster or ending a cluster depending on the <a href="aaf9d354-06b8-aa37-2f39-015b987b3be6.htm">MarkerStartsCluster</a> setting).
            It accepts 3 parameters: the current record, the previous record and the counter of records accumulated so far in the current cluster. Note that the previous record is null for the first record.
            If the predicate returns true, it causes cluster split (before or after the current record depending on <a href="aaf9d354-06b8-aa37-2f39-015b987b3be6.htm">MarkerStartsCluster</a> value);
            returning false causes continuation of record accumulation into the current cluster.
            In case this function marks the first record of a cluster (i.e. <a href="aaf9d354-06b8-aa37-2f39-015b987b3be6.htm">MarkerStartsCluster</a> is true), then the current record starts a new set of records accumulated for a cluster;
            otherwise (<a href="aaf9d354-06b8-aa37-2f39-015b987b3be6.htm">MarkerStartsCluster</a> is false, i.e. the function marks the last record of a cluster), the current record ends the set of records accumulated for a cluster, and a new empty
            set of accumulated records is created.
            If not specified, the default function will split clusters on every record, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBDA0MC0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0MC0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBDA0MC0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0MC0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBDA0MC0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBDA0MC0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBDA0MC0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">(r, pr, i) =&gt; <span class="highlight-keyword">true</span></pre></div><div id="ID0EBDA0MC0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(r, pr, i) <span class="highlight-keyword">True</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBDA0MC0CDA");</script>
            Any exception thrown by this function will cause the process shutdown with a completion status of <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">Failed</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="69304476-149c-7a60-5f05-8cb8f6652b75.htm">ClusterRouter</a></td><td><div class="summary">
            A function to determine the output target for every record in a given cluster.  It receives an output cluster and returns TargetNo to be assigned to every record of the cluster (Func&lt;ICluster, int&gt;).
            This function is specific to <a href="93f44cd4-deda-0169-7f87-aafedcd47f9d.htm">PerCluster</a> router type; it is ignored for other router types.  If not supplied, a default function that returns 1 for every cluster is assumed, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBDA0LC0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0LC0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBDA0LC0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0LC0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBDA0LC0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBDA0LC0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBDA0LC0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">clstr =&gt; <span class="highlight-number">1</span></pre></div><div id="ID0EBDA0LC0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(clstr) <span class="highlight-number">1</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBDA0LC0CDA");</script>
            Any exception thrown by this function will cause the process shutdown with a completion status of <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">Failed</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="8db1d209-168f-65b7-f112-a22af8ffa758.htm">ClusterSyncInterval</a></td><td><div class="summary">
            This advanced setting specifies number of milliseconds DataConveyer awaits when synchronizing processing of head and foot clusters.
            Note that regardless of <a href="35ee646c-094f-6375-9411-fb4e6d367b4a.htm">ConcurrencyLevel</a> setting, DataConveyer guarantees that the head cluster (if present) will be processed before
            all other clusters and that the foot cluster (if present) will be processed after all other clusters. The order of processing remaining ("regular")
            clusters is not guaranteed. The default setting of 40 ms is suitable for most scenarios.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="35ee646c-094f-6375-9411-fb4e6d367b4a.htm">ConcurrencyLevel</a></td><td><div class="summary">
            Degree of parallelism during transformation phase; defined as a maximum number of engines performing transformation.
            If not supplied, a default value of 1 is used.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="ad64d5ba-3218-de58-59e0-b7e7bcce6b96.htm">ConfigName</a></td><td><div class="summary">
            Name of this configuration in case it was created from a .cfg (and optional .dll) file(s) via RestoreConfig method; otherwise null.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="47b75aee-763d-57f5-65f6-04856f4f7fc5.htm">DataConveyerInfo</a></td><td><div class="summary">
            Information on current version of Data Conveyer.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="d67537a5-e74a-e0c3-c434-0c4d0778e2ee.htm">DefaultInputFieldWidth</a></td><td><div class="summary">
            Default width of fields in flat input data; applicable only if <a href="c8ef008d-8051-63fb-3f0f-f6101905b2d4.htm">InputDataKind</a> is Flat, ignored otherwise.
            If not specified, a default width of 10 is assumed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="5196cfc7-efae-81ea-a230-4983834ca0be.htm">DefaultOutputFieldWidth</a></td><td><div class="summary">
            Default width of fields in the flat output data; applicable only if <a href="be0694f4-b3c0-1603-888b-29c080c5c446.htm">OutputDataKind</a> is Flat, ignored otherwise.
            If not specified, a default width of 10 is assumed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="dc4c1d23-56bc-0a93-0773-496de85bbba3.htm">DefaultX12FieldDelimiter</a></td><td><div class="summary">
            Default value of the field delimiter - applicable only to X12 data.
            On X12 intake, field delimiter is always determined from ISA segment, so this setting only applies in case ISA segment is absent (incomplete X12 envelope).
            On X12 output, in absence of this setting, field delimiter is determined from intake if also X12 (specifically, from the first ISA segment encountered), or a default value of '*' is assumed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="926e9817-d77d-032f-10b3-d5992085e16e.htm">DefaultX12SegmentDelimiter</a></td><td><div class="summary">
            Default value of the segment delimiter - applicable only to X12 data.
            On X12 intake, segment delimiter is always determined from ISA segment, so this setting only applies in case ISA segment is absent (incomplete X12 envelope).
            On X12 output, in absence of this setting, segment delimiter is determined from intake if also X12 (specifically, from the first ISA segment encountered), or a default value of '~' is assumed.
            May contain multiple characters to make output easier to read, such as "~\r\n".
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="1c81e13a-14fd-b0fd-f57c-03bb68f3b136.htm">DeferOutput</a></td><td><div class="summary">
            Defines when Data Conveyer is allowed to start the <a href="373cd1d0-eda1-c54e-2f7e-ed3a596fd2d5.htm">Transformation</a> phase.
            This setting should be left at its default value of <a href="967ca85d-1d14-62b6-546e-d715c839f872.htm">Auto</a>.
            The value of <a href="967ca85d-1d14-62b6-546e-d715c839f872.htm">Indefinitely</a> is restricted for use in specialized tests only!
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="5b52a3d3-7f3f-85d9-abcd-b1a709ba071d.htm">DeferTransformation</a></td><td><div class="summary">
            Defines when Data Conveyer is allowed to start the <a href="373cd1d0-eda1-c54e-2f7e-ed3a596fd2d5.htm">Transformation</a> phase. One of:
            <ul><li><a href="c8855677-ce49-6eed-b179-4deb825f9dd1.htm">NotDeferred</a> - (default) appropriate in most scenarios.</li><li><a href="c8855677-ce49-6eed-b179-4deb825f9dd1.htm">UntilRecordInitiation</a> - typically used in conjunction with the <a href="09a5896a-02ef-e170-3a39-90bc3e1b44ff.htm">RecordInitiator</a> function.</li><li><a href="c8855677-ce49-6eed-b179-4deb825f9dd1.htm">UntilIntakeCompletion</a> - not recommended, except for troubleshooting.</li><li><a href="c8855677-ce49-6eed-b179-4deb825f9dd1.htm">Indefinitely</a> - restricted for use in specialized tests only!</li></ul>
            Note that after all records are read, the Intake phase still continues execution by executing record clustering. However, during the clustering process Data Conveyer has
            no ability totrigger the start of the Transformation phase. Similarly, the <a href="d68e844c-3622-d074-f890-14cceba69557.htm">ClusterMarker</a> function (unlike the <a href="09a5896a-02ef-e170-3a39-90bc3e1b44ff.htm">RecordInitiator</a> function ) has no ability 
            to set the trace bin contents.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="32d5f905-794a-593b-c197-e3a32cdd39f1.htm">EagerInitialization</a></td><td><div class="summary">
            If true, all initializations are executed regardless if prior initializations failed or not. So, for example <a href="56e8034c-033e-7b16-4aea-fa67d16fc68b.htm">OutputInitializer</a>  gets executed even after a failure of <a href="0a631825-7a7e-2725-1eb6-e7a5cad0c6fe.htm">IntakeInitializer</a>.
            This may result in unwanted reset of output (such as erasure of prior data) even if the process could not start due to a problem initializing intake.
            If false (default), any initialization failure (e.g. in <a href="0a631825-7a7e-2725-1eb6-e7a5cad0c6fe.htm">IntakeInitializer</a>) will prevent execution of subsequent initializations (such as <a href="56e8034c-033e-7b16-4aea-fa67d16fc68b.htm">OutputInitializer</a> ).
            In this case, troubleshooting of output initialization is only possible after successful intake initialization.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="edbadc3e-5872-e494-21df-f83fe88b6daa.htm">ErrorOccurredHandler</a></td><td><div class="summary">
            Handler of the ErrorOccurred event. Data Conveyer calls this function (regardless of the <a href="79e45b3c-23e2-3d55-32be-94d91257ec51.htm">ReportProgress</a> setting)
            when an exception thrown during processing (for example in the caller supplied code) is unhandled. 
            This handler is intended for troubleshooting purposes. It occurs immediately before the process completes with the
            status of <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">Failed</a> and provides the last chance to identify the reason of (but not recovery from) the failure. 
            Also note that any exceptions thrown by event handlers are discarded by Data Conveyer.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e3027028-f4d1-1f23-f235-603c40dbccd4.htm">ExcludeExtraneousFields</a></td><td><div class="summary"><p>
            In case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Delimited</a> or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Flat</a> output data, this setting, when true, causes
            Data Conveyer to remove trailing, insignificant fields, i.e. fields with empty values (in addition, trailing spaces on the last field are removed);
              if false (default), then all fields are always included on output (in their entirety).
            <p />
            For <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Keyword</a> output data, the setting is only applicable when <a href="1ba76e8f-55b3-aa84-aeac-114e06f4d8e2.htm">OutputFields</a> setting is specified.
              If true, only those fields that are both: specified in <a href="1ba76e8f-55b3-aa84-aeac-114e06f4d8e2.htm">OutputFields</a> and also present in the actual records will be included on output.
              If false (default), all fields will always be included on output (empty values assumed for fields absent from the actual records).
              </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="9e700b6c-0837-f24d-5da2-5bd4ce055135.htm">ExcludeItemsMissingPrefix</a></td><td><div class="summary">
            True will cause exclusion of items (fields) with keys not matching the <a href="cf574151-12e0-26fe-f40e-7ef73ff4d1aa.htm">InputKeyPrefix</a>; false (default) will include such fields (with keys in their entirety).
            Use caution when assigning true to this setting, as it may result in records with no contents (when none of the fields match prefix specified in <a href="cf574151-12e0-26fe-f40e-7ef73ff4d1aa.htm">InputKeyPrefix</a> setting).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="2060aefd-96d9-5761-f0cb-5436e51c4f53.htm">ExplicitTypeDefinitions</a></td><td><div class="summary"><p>
            This setting defines data types used in internal representations of record fields.
            It contains a set of keys (field names) along with their corresponding data types and optional formats.
            </p><p>
            The setting is in the form of a comma delimited list of items, each item being a pipe delimited triplet: fldName|type|format,
             where type is one of: S=String, M=Decimal, D=DateTime, I=Integer, B=Boolean; and format is the format string used when formatting output.
            Format can be omitted with the preceding pipe, in which case no formatting will take place.
            Format has no relevance on intake. In addition, with one exception, format is ignored in JSON output, because JSON supports writing elements
            in their native data types. The exception is for fields of DateTime type, which are not supported in JSON. DateTime fields are converted to strings
            (respecting format) before being submitted to JSON output.
            </p><p><b>Example:</b><span class="code">"AMOUNT|M,BIRTH_DATE|D|M/d/yyyy,AGE|I"</span></p><p>
            Sequence of the elements in this setting is irrelevant.
            </p><p>
            Types of the fields not specified in <a href="2060aefd-96d9-5761-f0cb-5436e51c4f53.htm">ExplicitTypeDefinitions</a> are determined by the <a href="e3d51c4b-3110-47b3-ffd9-c852396dc2b2.htm">TypeDefiner</a> function,
            which by default assumes string type and no format for all fields.
            </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
            In case of JSON intake, the elements are parsed according to JSON specifications, which involves automatic data type determination. However,
            in order to preserve this type, the corresponding field must be of a matching type. Otherwise, the type conversion will be performed.
            </p><p>
            For example, a JSON element <span class="code">"ID": 5</span> will be parsed as number 5. So, in order to avoid type conversion, a setting of <span class="code">ID|I</span> is needed (otherwise, number 5
            will be converted to string "5"). Similarly, an element <span class="code">"ID": "5"</span> will be parsed as string "5". Therefore, no type conversion will take place in absense
            of type definition for field "ID" (fields are strings by default); if however setting <span class="code">ID|I</span> is present, then string "5" will be converted
            into number 5.
            </p></td></tr></table></div></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="2e7d42d3-8426-0fa8-9c53-cdda797c7b5a.htm">GlobalCacheElements</a></td><td><div class="summary"><p>
            A list of definitions of the elements to be held in the global cache (<a href="b9a1fa9f-55cc-9b8e-8ccd-6dc5b69dcc0f.htm">IGlobalCache</a>). Global cache is a central repository of arbitrary key value pairs maintained throughout the Data Conveyer process.
            Each array element defines a single global cache element. The definition consists of the key optionally followed by a pipe symbol (|) and the initial value to be placed in global cache.
            Element keys are of string type (only letters and numbers are recommended). The type of each element depends on the element value: if specified after the pipe symbol, it can be one of: int, DataTime, decimal or string.
            In case no pipe symbol is present in element definition, the element will be of type object with a null value. Note that element values (and types as well) can be changed by the <a href="9638c978-b8db-c0cb-ccc0-f9f018b2cc67.htm">ReplaceValue<span id="LSTAA8F08DC_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAA8F08DC_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TIn, TOut<span id="LSTAA8F08DC_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAA8F08DC_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(String, Func<span id="LSTAA8F08DC_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAA8F08DC_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TIn, TOut<span id="LSTAA8F08DC_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAA8F08DC_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a> method.
            </p><p>Rules for determining the element type depend on the value placed after the pipe symbol (|):</p><ul><li>Any unquoted number without decimal point or commas will be of an int type.
            Int examples: "Int|0", "Val2|-15".</li><li>An unquoted number with decimal point will be of a decimal type.
            Decimal examples: "Dec|0.", "AnotherDec|-3.5".</li><li>A string in a valid date format will be of a DateTime type.
            DateTime examples: "Date|12/31/2012", Val2|12-DEC-12".</li><li>Any quoted string or string not fitting other types will be of a string type. Strings can contain any characters including pipe symbols and quotes if quoted, i.e. staring with a quote (ending quote is optional).
            String examples (note escaped inner quotes): "Str|abc", "Val2|\"0\"", "Val3|\"0", "Val4|\"\"" (empty string), "Val5|" (empty string)).</li><li>In absence of the pipe symbol, a null object is assumed, e.g. "Val1" (null).</li></ul><p>Note that <a href="2060aefd-96d9-5761-f0cb-5436e51c4f53.htm">ExplicitTypeDefinitions</a> or <a href="e3d51c4b-3110-47b3-ffd9-c852396dc2b2.htm">TypeDefiner</a> settings have no meaning in determining the type of the global cache elements.</p><p>Also note that this settings only defines the elements of the global cache, and not the signals, which are simply referred to in <a href="59b152af-860a-63ea-2230-874e763d5558.htm">RaiseSignal(String)</a>, <a href="9f8754cc-1b65-9a37-5237-06eb7dfa967a.htm">AwaitSignal(String)</a>
            and <a href="aff4d3f9-a261-01b6-3253-7f457c952ff5.htm">AwaitSignalAsync(String)</a> methods.</p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="af7e75cd-946b-7122-1863-058994b03e3c.htm">HeadersInFirstInputRow</a></td><td><div class="summary">
            True means 1st input line contains field names and data starts from the 2nd line; false (default) means data starts from the 1st line (default field names are assigned in this case).
            This setting applies only to data kinds that support header rows, such as <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Delimited</a> or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Flat</a>; otherwise, it is  ignored, in which case data always starts from the 1st line.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="22cd49e1-52d1-0c18-ad88-ed29a613755a.htm">HeadersInFirstOutputRow</a></td><td><div class="summary">
            True means 1st line sent to output will contain field names and data will start on the 2nd line; false (default) means no field names are sent to output and data starts on the 1st line. 
            This setting applies only to data kinds that support header rows, such as <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Delimited</a> or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Flat</a>; otherwise, it is  ignored, in which case data always starts on the 1st line.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="c8ef008d-8051-63fb-3f0f-f6101905b2d4.htm">InputDataKind</a></td><td><div class="summary">
            Type (format) of input data: Raw, Keyword, Delimited, Flat, Arbitrary, XML, JSON or X12.  Default is Raw.
            These values are intended for future use: HL7 and Ultimate.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="bbfdec26-37e6-ae8e-801d-75d54b299b5a.htm">InputFields</a></td><td><div class="summary"><p>
            Comma delimited list of fields as they appear on intake lines.
            Each field is defined by a name and width, separated by a pipe (|) symbol.
            Field widths are only applicable to <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Flat</a> (fixed width) data; they are ignored for other kinds of input data.  Where omitted or invalid, a default width (<a href="d67537a5-e74a-e0c3-c434-0c4d0778e2ee.htm">DefaultInputFieldWidth</a>) is assumed.
            Field names specified in this setting take precedence over those in the first row headers (<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Delimited</a> and <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Flat</a> data), so in case of <a href="af7e75cd-946b-7122-1863-058994b03e3c.htm">HeadersInFirstInputRow</a>=true,
            the 1st row data may get discarded.
            </p><p>
            If a field name is omitted, a default name will be used (either from the header row or from a formula, which yields Fldnnn, where nnn is the field sequence number; exception is <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">X12</a> data, where fields are named Segment, Elem001, Elem002, ...).
            This setting, when accompanied by <a href="6dbb891e-c613-fa15-05e7-ea7663fb3e37.htm">AllowOnTheFlyInputFields</a> of false, can be used to only accept those fields specified and exclude all other fields from intake (e.g. in case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Keyword</a> data).
            </p><p>Examples:</p><ul><li><strong>|10,|4,|12</strong> -  (flat data, records 26 character long, field names in header row or default names)</li><li><strong>Seq#|5, First Name|12,Mid Init|1, Last Name or Company|20, Zip Code|5</strong> -  (flat data, records 43 character long)</li><li><strong>Seq#,Name,Description</strong> -  (keyword data, exclude all fields from intake except for the 3 specified)</li></ul></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="0ba31ba4-7c51-96c5-0b77-fe5b8c551746.htm">InputFieldSeparator</a></td><td><div class="summary">
            Character that separates fields on intake lines. Only applicable to Delimited and Keyword data, ignored in case of other data kinds.
            If not specified, a comma is assumed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="5171fa2f-d3fe-b2d0-6211-92180c055af7.htm">InputFileName</a></td><td><div class="summary"><p>
            A synonym for the <a href="da508f34-03f2-4da7-1ddd-eae99f7d84f5.htm">InputFileNames</a> setting (to make it more intuitive in case of a single input file).
            </p><p><a href="5171fa2f-d3fe-b2d0-6211-92180c055af7.htm">InputFileName</a> and <a href="da508f34-03f2-4da7-1ddd-eae99f7d84f5.htm">InputFileNames</a> settings should not be used both at the same time.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="da508f34-03f2-4da7-1ddd-eae99f7d84f5.htm">InputFileNames</a></td><td><div class="summary"><p>
            Name(s) of (i.e. path(s) to) the input file(s). This setting is the same as (synonym for) the <a href="5171fa2f-d3fe-b2d0-6211-92180c055af7.htm">InputFileName</a> setting.
            If multiple files are specified, the names are separated by pipe symbols(|). Each name can be surrounded by double quotes. The first file is assigned SourceNo=1, the second SourceNo=2, etc.
            The files will be read one after another (in SourceNo order) either synchronously or asynchronously, depending on <a href="e1976db1-9354-6ba2-7609-ae600e18e070.htm">AsyncIntake</a> setting.
            Ignored if <a href="fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7.htm">TextIntakeSupplier</a> or <a href="fca3d59e-4c8d-1259-6b0b-72a0409db084.htm">IntakeReaders</a> setting (or one of their equivalent settings) is also submitted.
            </p><p><a href="5171fa2f-d3fe-b2d0-6211-92180c055af7.htm">InputFileName</a> and <a href="da508f34-03f2-4da7-1ddd-eae99f7d84f5.htm">InputFileNames</a> settings should not be used both at the same time.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="0cb14e72-fa1d-5b81-581a-8f323e149363.htm">InputHeadersRepeated</a></td><td><div class="summary">
            Relevant only if multiple intake sources are present and <a href="af7e75cd-946b-7122-1863-058994b03e3c.htm">HeadersInFirstInputRow</a> is true.
            True (default) means that all intake sources contain the header row; in this case Data Conveyer will read the headers from the first source that supplied intake data and will ignore the header rows from the remaining sources.
            False means that only the source that supplies the intake data first contains the header row (typically the source with SourceNo=1, but it can actually be any source); the remaining sources are assumed to only contain data rows (regardless of the <a href="af7e75cd-946b-7122-1863-058994b03e3c.htm">HeadersInFirstInputRow</a> setting).
            In either case, the only header row actually considered is the one from the source that supplies intake first. Note that all intake sources are subjected to the same set of processing rules, which implies that the same header row is applicable to all sources (hence the header row should be identical for all sources).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="cf574151-12e0-26fe-f40e-7ef73ff4d1aa.htm">InputKeyPrefix</a></td><td><div class="summary">
            Prefix to be trimmed (removed) from every key on input, if any (e.g. @p).
            Default value is null (no prefix to be removed).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="310ead30-4b34-2237-38f8-9dc807c34ee3.htm">IntakeBufferFactor</a></td><td><div class="summary">
            Ratio between sizes of the intake buffer and the transformer's input buffer (the latter is defined by the <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a> setting).
            This advanced setting allows fine-tuning of memory consumption by Data Conveyer.
            For example, if an average cluster on intake is expected to be created from 4 intake records, then it may be sensible to set intake buffer size to 400 records
             and transformer's input buffer size to 100 clusters.  In this case, <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a> = 100 and <a href="310ead30-4b34-2237-38f8-9dc807c34ee3.htm">IntakeBufferFactor</a> = 4.0.
            Default value for <a href="310ead30-4b34-2237-38f8-9dc807c34ee3.htm">IntakeBufferFactor</a> is 1.5.
            This setting is respected only if <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a> is set to a positive value (i.e. ignored in case of <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a>'s default value of -1 (Unlimited)).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="0b504432-e849-91e2-fce7-fed9f902ded9.htm">IntakeDisposer</a></td><td><div class="summary">
            An action intended to dispose any intake sources and related resources that were opened by the <a href="0a631825-7a7e-2725-1eb6-e7a5cad0c6fe.htm">IntakeInitializer</a> function.
            Data Conveyer calls this action a single time after completing orchestrator processing (when the orchestrator is disposed).
            However, if <a href="fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7.htm">TextIntakeSupplier</a> or <a href="9aaddf28-428e-829d-6350-f310ff42d6c5.htm">AsyncTextIntakeSupplier</a> function is not defined; then this action is not called.
            The <a href="0b504432-e849-91e2-fce7-fed9f902ded9.htm">IntakeDisposer</a> action accepts a single parameter (<a href="b9a1fa9f-55cc-9b8e-8ccd-6dc5b69dcc0f.htm">IGlobalCache</a>) and returns void (Action&lt;IGlobalCache&gt;).
            If not defined, Data Conveyer assumes empty action, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBA0QB0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBA0QB0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBBA0QB0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBA0QB0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBA0QB0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBA0QB0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBA0QB0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">gc =&gt; { }</pre></div><div id="ID0EBBA0QB0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Sub</span>(gc)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBA0QB0CDA");</script>
            Any exception thrown by this action will be logged, but otherwise ignored.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="0a631825-7a7e-2725-1eb6-e7a5cad0c6fe.htm">IntakeInitializer</a></td><td><div class="summary">
            A function intended to initialize any intake sources (such as open files or database connections) and related resources that may be needed by the <a href="fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7.htm">TextIntakeSupplier</a> or <a href="9aaddf28-428e-829d-6350-f310ff42d6c5.htm">AsyncTextIntakeSupplier</a> function.
            Data Conveyer calls this function a single time before starting the actual orchestrator processing, such as invocations of <a href="fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7.htm">TextIntakeSupplier</a> function, if one is defined.
            However, if <a href="fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7.htm">TextIntakeSupplier</a> or <a href="9aaddf28-428e-829d-6350-f310ff42d6c5.htm">AsyncTextIntakeSupplier</a> function is not defined; then this function is not called.
            The <a href="0a631825-7a7e-2725-1eb6-e7a5cad0c6fe.htm">IntakeInitializer</a> function accepts a single parameter (<a href="b9a1fa9f-55cc-9b8e-8ccd-6dc5b69dcc0f.htm">IGlobalCache</a>) and returns a string (Func&lt;IGlobalCache, string&gt;).
            Null returned value means successful initialization; otherwise, an error message indicating reason for the failure is expected to be returned (Data Conveyer will log this message).
            In case of failure, the processing will end in the <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">InitializationError</a> status.
            If not defined, default <a href="0a631825-7a7e-2725-1eb6-e7a5cad0c6fe.htm">IntakeInitializer</a> simply returns null, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBAA0PB0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBAA0PB0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBAA0PB0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBAA0PB0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBAA0PB0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBAA0PB0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBAA0PB0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">gc =&gt; <span class="highlight-keyword">null</span></pre></div><div id="ID0EBAA0PB0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(gc) <span class="highlight-keyword">Nothing</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBAA0PB0CDA");</script></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="ef2cbd01-10b7-8651-ae16-387b857e53dc.htm">IntakeReader</a></td><td><div class="summary">
            A function returning a text reader object to supply data into the Data Conveyer intake process.
            This setting is equivalent to  <a href="fca3d59e-4c8d-1259-6b0b-72a0409db084.htm">IntakeReaders</a> setting containing a single reader.
            <a href="ef2cbd01-10b7-8651-ae16-387b857e53dc.htm">IntakeReader</a> and <a href="fca3d59e-4c8d-1259-6b0b-72a0409db084.htm">IntakeReaders</a> settings should not be used both at the same time.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="fca3d59e-4c8d-1259-6b0b-72a0409db084.htm">IntakeReaders</a></td><td><div class="summary">
            A function returning a collection of text reader objects to supply data into the Data Conveyer intake process. Each reader corresponds to a single intake source;
            the first reader is assigned SourceNo=1, the second SourceNo=2, etc.
            Data will be read from one reader after another, in SourceNo order, either synchronously or asynchronously, depending on <a href="e1976db1-9354-6ba2-7609-ae600e18e070.htm">AsyncIntake</a> setting.
            Ignored if the <a href="fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7.htm">TextIntakeSupplier</a> function (or applicable equivalent function) is also submitted.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="705afb55-cddd-890e-efc2-2bc637365657.htm">IntakeRecordLimit</a></td><td><div class="summary">
            Maximum number of intake records allowed for the process execution. Default value is -1, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBAA0MB0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBAA0MB0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBAA0MB0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBAA0MB0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBAA0MB0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBAA0MB0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBAA0MB0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Unlimited</pre></div><div id="ID0EBAA0MB0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">Unlimited</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBAA0MB0CDA");</script></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="d0964933-c9df-f7d7-4214-a03368264589.htm">IntakeSupplier</a></td><td><div class="summary">
             A function that supplies a tuple containing a <a href="8e08f4d2-aa58-1594-e4ef-425c967be733.htm">ExternalLine</a> object (an input line to be fed into Data Conveyer) and the source number (1-based) (Func&lt;IGlobalCache, Tuple&lt;string,int&gt;&gt;).
             Data Conveyer calls this function when <a href="e1976db1-9354-6ba2-7609-ae600e18e070.htm">AsyncIntake</a> is false (providing a single parameter - <a href="b9a1fa9f-55cc-9b8e-8ccd-6dc5b69dcc0f.htm">IGlobalCache</a>) in succession until null is received.
             When end of data is reached (i.e. all intake sources are depleted), the function must return null (end of data mark), which will initiate processing shutdown with a status of <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">IntakeDepleted</a>.
             Note the difference between null tuples (end of data marks) and tuples containing null <a href="8e08f4d2-aa58-1594-e4ef-425c967be733.htm">ExternalLine</a> objects (ignored by Data Conveyer).
             Any returned tuples that contain null <a href="8e08f4d2-aa58-1594-e4ef-425c967be733.htm">ExternalLine</a> objects are ignored by Data Conveyer; to send an empty line, a tuple containing an empty object (e.g. an empty string) needs to be returned.
             If not defined, Data Conveyer assumes default <a href="d0964933-c9df-f7d7-4214-a03368264589.htm">IntakeSupplier</a> function that returns no data, but only the end of data mark, i.e.:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBDA0LB0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0LB0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBDA0LB0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0LB0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBDA0LB0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBDA0LB0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBDA0LB0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">gc =&gt; <span class="highlight-keyword">null</span></pre></div><div id="ID0EBDA0LB0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(gc) <span class="highlight-keyword">Nothing</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBDA0LB0CDA");</script>
             This function is called on a dedicated thread to prevent possible deadlocks in situations, such as UI updates made during progress changes.
             Any exception thrown by this function will cause the process shutdown with a completion status of <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">Failed</a>.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="73dad4d7-ac76-f2f7-bcc8-a9b50f0619b1.htm">LeaderContents</a></td><td><div class="summary">
            Data, if any, to be sent to output before the first output line; may be multi-line.
            In case the header row is also present, then it will follow the leader contents.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="aaf9d354-06b8-aa37-2f39-015b987b3be6.htm">MarkerStartsCluster</a></td><td><div class="summary">
            True (default) means that <a href="d68e844c-3622-d074-f890-14cceba69557.htm">ClusterMarker</a> predicate matches the first record of a cluster (i.e. starts a cluster); false means that predicate matches the last record of a cluster (i.e. ends a cluster).
            As a general rule, true value is recommended (marker starts a cluster), especially in cases where <a href="d68e844c-3622-d074-f890-14cceba69557.htm">ClusterMarker</a> predicate relies on the previous record contents or the number of records accumulated so far;
            false value (marker ends a cluster) should only be used in cases where <a href="d68e844c-3622-d074-f890-14cceba69557.htm">ClusterMarker</a> predicate relies solely on the current record contents.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="92b92a61-de1b-64d8-1ec3-767e642276b4.htm">OutputBufferFactor</a></td><td><div class="summary">
            Ratio between sizes of the output buffer and the transformer's input buffer (transformer's input buffer size is defined by the <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a> setting).
            This advanced setting allows fine-tuning of memory consumption by Data Conveyer.
            For example, if an average cluster on output is expected to produce 5 output records (and also on average every other cluster to be removed by the transformer),
             it may be sensible to set the transformer's input buffer size to 100 clusters (transformer's output buffer size to 50 clusters)
             and the output buffer size to 250 clusters.  In this case, <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a> = 100 and <a href="92b92a61-de1b-64d8-1ec3-767e642276b4.htm">OutputBufferFactor</a> = 2.5.
            Default value for <a href="310ead30-4b34-2237-38f8-9dc807c34ee3.htm">IntakeBufferFactor</a> is 1.5.
            This setting is respected only if <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a> is set to a positive value (i.e. ignored in case of <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a>'s default value of -1 (Unlimited)).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="925463ba-ed7f-0aa6-b51c-ee9fc0e552d5.htm">OutputConsumer</a></td><td><div class="summary">
             An action (void function) that consumes a tuple containing a <a href="8e08f4d2-aa58-1594-e4ef-425c967be733.htm">ExternalLine</a> object (a single output line received from Data Conveyer) and the target number (1-based). (Action&lt;Tuple&lt;string, int&gt;&gt;).
             Reference to global cache (<a href="b9a1fa9f-55cc-9b8e-8ccd-6dc5b69dcc0f.htm">IGlobalCache</a> is passed as the second parameter.
             Data Conveyer calls this action (when <a href="8db6a3e3-2150-f25a-db54-41e2a634ae79.htm">AsyncOutput</a> is false) in succession passing (tuples with) the output lines one at a time.
             The last tuple sent by Data Conveyer is always null (end of data mark).
             If not defined, Data Conveyer assumes default <a href="925463ba-ed7f-0aa6-b51c-ee9fc0e552d5.htm">OutputConsumer</a> action that ignores data passed to it, i.e.:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBDA0HB0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0HB0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBDA0HB0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDA0HB0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBDA0HB0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBDA0HB0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBDA0HB0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">(tpl, gc) =&gt; { }</pre></div><div id="ID0EBDA0HB0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Sub</span>(tpl, gc)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBDA0HB0CDA");</script>
             Any exception thrown by this action will cause the process shutdown with a <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">CompletionStatus</a> of Failed.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="be0694f4-b3c0-1603-888b-29c080c5c446.htm">OutputDataKind</a></td><td><div class="summary">
            Type (format) of output data: Raw, Keyword, Delimited, Flat, Arbitrary, X12, XML or JSON.  Default is Raw.
            HL7 and Ultimate types are designated for future use.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="db3fb010-5339-e15d-c5f8-881ce91dae84.htm">OutputDisposer</a></td><td><div class="summary">
            An action intended to dispose any output targets and related resources that were opened by the <a href="56e8034c-033e-7b16-4aea-fa67d16fc68b.htm">OutputInitializer</a> function.
            Data Conveyer calls this action a single time after completing orchestrator processing (when the orchestrator is disposed).
            However, if <a href="6a9be6bf-d527-c86a-2fdc-e501a528091a.htm">TextOutputConsumer</a> or <a href="90990062-f149-d50f-a65d-1c0c5d06c3d8.htm">AsyncTextOutputConsumer</a> action is not defined; then this function is not called.
            The <a href="db3fb010-5339-e15d-c5f8-881ce91dae84.htm">OutputDisposer</a> action accepts a single parameter (<a href="b9a1fa9f-55cc-9b8e-8ccd-6dc5b69dcc0f.htm">IGlobalCache</a>) and returns void (Action&lt;IGlobalCache&gt;).
            If not supplied, Data Conveyer assumes empty action, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBA0FB0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBA0FB0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBBA0FB0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBA0FB0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBA0FB0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBA0FB0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBA0FB0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">gc =&gt; { }</pre></div><div id="ID0EBBA0FB0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Sub</span>(gc)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBA0FB0CDA");</script>
            Any exception thrown by this function will be logged, but otherwise ignored.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="1ba76e8f-55b3-aa84-aeac-114e06f4d8e2.htm">OutputFields</a></td><td><div class="summary"><p>
            Comma delimited list of fields to appear on output lines.
            Each field is defined by a name and width, separated by a pipe (|) symbol.
            Once this setting is specified, only those fields specified can be included in output.
            </p><p>
            This setting is optional. However, it can only be omitted in its entirety, in which case all fields produced by transformation will be included in output.
            If the setting is present, then each field name must be specified (no default names can be assumed [unlike <a href="bbfdec26-37e6-ae8e-801d-75d54b299b5a.htm">InputFields</a>]).
            If a name of a non-existing field is specified, then empty contents is sent to output for such field.
            </p><p>
            Field widths are only applicable to <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Flat</a> (fixed width) data output; they are ignored for other kinds of output data.
            Where omitted or invalid, a default width (<a href="5196cfc7-efae-81ea-a230-4983834ca0be.htm">DefaultOutputFieldWidth</a>) is assumed.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6490499e-b55b-df27-0803-2506cc100ab9.htm">OutputFieldSeparator</a></td><td><div class="summary">
            Character that separates fields on output lines. Only applicable to Delimited and Keyword data, ignored in case of other data kinds.
            If not specified, a comma is assumed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="69282527-0139-6974-c2d6-1f61b4edf2a1.htm">OutputFileName</a></td><td><div class="summary"><p>
            A synonym for the <a href="5f3723ee-97f2-52d5-fbe8-e5e35737d938.htm">OutputFileNames</a> setting (to make it more intuitive in case of a single output file).
            </p><p><a href="69282527-0139-6974-c2d6-1f61b4edf2a1.htm">OutputFileName</a> and <a href="5f3723ee-97f2-52d5-fbe8-e5e35737d938.htm">OutputFileNames</a> settings should not be used both at the same time.
            </p>      /// </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="5f3723ee-97f2-52d5-fbe8-e5e35737d938.htm">OutputFileNames</a></td><td><div class="summary"><p>
            Name(s) of (path(s) to) the output file(s). This setting is the same as (synonym for) the <a href="69282527-0139-6974-c2d6-1f61b4edf2a1.htm">OutputFileName</a> setting.
            </p><p>
            If multiple files are specified, the names are separated by pipe symbols(|). Each name can be surrounded by double quotes. The first file is assigned TargetNo=1, the second TargetNo=2, etc.
            Number of files specified here must be equal the highest TargetNo returned by the <a href="69304476-149c-7a60-5f05-8cb8f6652b75.htm">ClusterRouter</a> function.
            Ignored if <a href="6a9be6bf-d527-c86a-2fdc-e501a528091a.htm">TextOutputConsumer</a> or <a href="e36bae12-4129-b25c-3213-3adf323e7ae4.htm">OutputWriters</a> setting (or one of their equivalent settings) is also submitted.
            </p><p><a href="69282527-0139-6974-c2d6-1f61b4edf2a1.htm">OutputFileName</a> and <a href="5f3723ee-97f2-52d5-fbe8-e5e35737d938.htm">OutputFileNames</a> settings should not be used both at the same time.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="56e8034c-033e-7b16-4aea-fa67d16fc68b.htm">OutputInitializer</a></td><td><div class="summary">
            A function intended to initialize any output targets (such as open files or database connections) and related resources that may be needed by the <a href="6a9be6bf-d527-c86a-2fdc-e501a528091a.htm">TextOutputConsumer</a> or <a href="90990062-f149-d50f-a65d-1c0c5d06c3d8.htm">AsyncTextOutputConsumer</a> action.
            Data Conveyer calls this function a single time before starting the actual orchestrator processing, such as  invocations of <a href="6a9be6bf-d527-c86a-2fdc-e501a528091a.htm">TextOutputConsumer</a> function if one is defined.
            However, if <a href="6a9be6bf-d527-c86a-2fdc-e501a528091a.htm">TextOutputConsumer</a> or <a href="90990062-f149-d50f-a65d-1c0c5d06c3d8.htm">AsyncTextOutputConsumer</a> action is not defined; then this function is not called.
            The <a href="56e8034c-033e-7b16-4aea-fa67d16fc68b.htm">OutputInitializer</a> function accepts a single parameter (<a href="b9a1fa9f-55cc-9b8e-8ccd-6dc5b69dcc0f.htm">IGlobalCache</a>) and returns a string (Func&lt;string&gt;).
            Null returned value means successful initialization; otherwise, an error message indicating reason for the failure is expected to be returned (Data Conveyer will log this message).
            This function may remain not called in case of failure of prior initializer (<a href="0a631825-7a7e-2725-1eb6-e7a5cad0c6fe.htm">IntakeInitializer</a>), in which case the processing will result in the <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">InitializationError</a> status.
            If not defined, default <a href="56e8034c-033e-7b16-4aea-fa67d16fc68b.htm">OutputInitializer</a> function simply returns null, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBAA0AB0CDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBAA0AB0CDA','cs','1','2');return false;">C#</a></div><div id="ID0EBAA0AB0CDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBAA0AB0CDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBAA0AB0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBAA0AB0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBAA0AB0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">gc =&gt; <span class="highlight-keyword">null</span></pre></div><div id="ID0EBAA0AB0CDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(gc) <span class="highlight-keyword">Nothing</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBAA0AB0CDA");</script></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f984ded5-6a7f-f758-f644-c806e24bca6c.htm">OutputKeyPrefix</a></td><td><div class="summary">
            Prefix to be prepended to every key on <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Keyword</a> output (e.g. @p).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="7682a55e-457f-0133-f127-de04cd081c3b.htm">OutputWriter</a></td><td><div class="summary">
            A function returning a text writer object to consume data produced by the Data Conveyer output.
            This setting is equivalent to  <a href="e36bae12-4129-b25c-3213-3adf323e7ae4.htm">OutputWriters</a> setting containing a single writer.
            <a href="7682a55e-457f-0133-f127-de04cd081c3b.htm">OutputWriter</a> and <a href="e36bae12-4129-b25c-3213-3adf323e7ae4.htm">OutputWriters</a> settings should not be used both at the same time.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e36bae12-4129-b25c-3213-3adf323e7ae4.htm">OutputWriters</a></td><td><div class="summary">
            A function returning a collection of text writer objects to consume data produced by the Data Conveyer output. Each writer corresponds to a single output target;
            the first writer is assigned TargetNo=1, the second TargetNo=2, etc.
            Number of files specified here must be equal the highest TargetNo returned by the <a href="69304476-149c-7a60-5f05-8cb8f6652b75.htm">ClusterRouter</a> function.
            Ignored if the <a href="6a9be6bf-d527-c86a-2fdc-e501a528091a.htm">TextOutputConsumer</a> function (or applicable equivalent function) is also submitted.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="98ed62f1-90f6-e962-1629-0593c6709773.htm">PhaseFinishedHandler</a></td><td><div class="summary">
            Handler of the PhaseFinished event. Data Conveyer calls this function at the end of a processing phase.
            Note that any exceptions thrown by event handlers are discarded by Data Conveyer.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e43a33f0-17c3-8242-c4b4-7646bfb1fa0a.htm">PhaseStartingHandler</a></td><td><div class="summary">
            Handler of the PhaseStarting event. Data Conveyer calls this function at start of a processing phase.
            Note that any exceptions thrown by event handlers are discarded by Data Conveyer.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="aa76f38f-baff-dc6a-4849-d4ba87888bd1.htm">PrependHeadCluster</a></td><td><div class="summary">
            True causes Data Conveyer to add an extra empty cluster (so called head cluster) before the first cluster formed from intake records.
            False (default) means no foot cluster will be added at the end of intake.
            The head cluster always has a <a href="0f110a8a-6eb6-76e1-2d7b-105aaca11076.htm">StartRecNo</a> of 0 (<a href="a6b45d74-364f-5517-2d05-b11b298b9ba6.htm">HeadClusterRecNo</a>) and <a href="ea498d06-1b4d-040f-2116-f206f9dee09a.htm">StartSourceNo</a> of 1. Header and/or leader contents, if present, will precede the head cluster on output.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="4bab7c11-5845-8fa7-3d02-23d9a612b14f.htm">ProgressChangedHandler</a></td><td><div class="summary">
            Handler of the ProgressChanged event. Data Conveyer calls this function at specified intervals during processing.
            Note that any exceptions thrown by event handlers are discarded by Data Conveyer.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f0455ab6-fa49-bb9a-00ef-15277089f022.htm">ProgressInterval</a></td><td><div class="summary">
            Frequency of raising the ProgressChanges event:
            <ul><li><strong>0</strong> -  Never (default)</li><li><strong>1</strong> -  Every cluster</li><li><strong>2</strong> -  Every other cluster</li><li><strong>...</strong> -  Etc.</li></ul>
            This setting is ignored if ReportProgree is false.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="55c9ade5-2338-437d-1ecf-697247f095aa.htm">PropertyBinEntities</a></td><td><div class="summary">
            Entities (such as records and/or clusters) that will have property bin objects attached to during Data Conveyer processing.
            Default value is <a href="2fbcaab6-1244-cc2a-429a-7f447dcae166.htm">Nothing</a>, i.e. no property bins attached.
            This feature should be used judiciously due to its impact on performance.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="b5ecdf86-99ae-2f24-f21e-44ee77b68b45.htm">QuotationMode</a></td><td><div class="summary">
            Specifies which values are to be surrounded with quotes on output. One of:
            OnlyIfNeeded - Output values are not quoted, except for those that contain commas and/or quotes (default).
            StringsAndDates - String and date values are quoted on output, while decimal or integer values are not (except if formatted to contain commas).
            Always - All values are surrounded with quotes on output.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="31007855-3ca5-8949-f960-6939d6c18c1c.htm">RecordboundTransformer</a></td><td><div class="summary">
            A function that takes a single record and returns a single record; specific to <a href="ab960898-7287-fb62-44a2-925659cb5b10.htm">Recordbound</a> transformer type.
            In case the function returns null (Nothing in Visual Basic), the record will be filtered out.
            This makes the <a href="ab960898-7287-fb62-44a2-925659cb5b10.htm"> and </a><a href="6738392e-694b-ba3c-0861-d114c5cc7cad.htm">RecordFilterPredicate</a> a special case of 
            <a href="ab960898-7287-fb62-44a2-925659cb5b10.htm"> and </a><a href="31007855-3ca5-8949-f960-6939d6c18c1c.htm">RecordboundTransformer</a> where unfiltered records are passed through.
            If not supplied, a default pass-through function is used that passes input record to output, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBDAVCDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDAVCDA','cs','1','2');return false;">C#</a></div><div id="ID0EBDAVCDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDAVCDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBDAVCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBDAVCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBDAVCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">rec =&gt; rec</pre></div><div id="ID0EBDAVCDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(rec) rec</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBDAVCDA");</script>
            Any exception thrown by this function will cause the process shutdown with a completion status of <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">Failed</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6738392e-694b-ba3c-0861-d114c5cc7cad.htm">RecordFilterPredicate</a></td><td><div class="summary">
            A predicate (boolean function) that takes a single record and returns true to accept the record or false to reject it; specific to <a href="ab960898-7287-fb62-44a2-925659cb5b10.htm">RecordFilter</a> transformer type.
            Note that in case all records for a cluster are rejected, then the cluster will be rejected.
            If not supplied, a default pass-through predicate is used that always returns true, i.e.:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBAUCDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBAUCDA','cs','1','2');return false;">C#</a></div><div id="ID0EBBAUCDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBAUCDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBAUCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBAUCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBAUCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">rec =&gt; <span class="highlight-keyword">true</span></pre></div><div id="ID0EBBAUCDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(rec) <span class="highlight-keyword">True</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBAUCDA");</script>
             Any exception thrown by this function will cause the process shutdown (CompletionStatus of Failed).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="09a5896a-02ef-e170-3a39-90bc3e1b44ff.htm">RecordInitiator</a></td><td><div class="summary"><p>Introduces records into the processing pipeline of Data Conveyer.</p><p>
            This function is called once per record immediately after the record is read from intake and parsed, before being forwarded to the clustering process.
            There are 2 roles of this function: trace bin setup and trigger the start of the <a href="373cd1d0-eda1-c54e-2f7e-ed3a596fd2d5.htm">Transformation</a> phase.
            Any data collected from the current record can be stored in a trace bin for access during processing of subsequent records (as well as during subsequent phases of processing).
            The start of the <a href="373cd1d0-eda1-c54e-2f7e-ed3a596fd2d5.htm">Transformation</a> phase can be triggered by this function only in case of <a href="5b52a3d3-7f3f-85d9-abcd-b1a709ba071d.htm">DeferTransformation</a> set to <a href="c8855677-ce49-6eed-b179-4deb825f9dd1.htm">UntilRecordInitiation</a>.
            </p><p>The function accepts 2 parameters: current record and a trace bin object (dictionary).
            The function returns boolean value to trigger the start of the <a href="373cd1d0-eda1-c54e-2f7e-ed3a596fd2d5.htm">Transformation</a> phase in case of <a href="5b52a3d3-7f3f-85d9-abcd-b1a709ba071d.htm">DeferTransformation</a> set to <a href="c8855677-ce49-6eed-b179-4deb825f9dd1.htm">UntilRecordInitiation</a>.
            Note that records are processed sequentially on <a href="373cd1d0-eda1-c54e-2f7e-ed3a596fd2d5.htm">Intake</a>; after returning the first true (or if <a href="5b52a3d3-7f3f-85d9-abcd-b1a709ba071d.htm">DeferTransformation</a> setting is other than <a href="c8855677-ce49-6eed-b179-4deb825f9dd1.htm">UntilRecordInitiation</a>),
            the values returned by this function are inconsequential.
            In case <a href="09a5896a-02ef-e170-3a39-90bc3e1b44ff.htm">RecordInitiator</a> returns false for all records and the <a href="5b52a3d3-7f3f-85d9-abcd-b1a709ba071d.htm">DeferTransformation</a> is <a href="c8855677-ce49-6eed-b179-4deb825f9dd1.htm">UntilRecordInitiation</a>, the transformation starts after all input records have been read.</p><p>Deferral of <a href="373cd1d0-eda1-c54e-2f7e-ed3a596fd2d5.htm">Transformation</a> may be useful in cases where transformation of initial clusters (e.g. head cluster) requires data that is read from some records during <a href="373cd1d0-eda1-c54e-2f7e-ed3a596fd2d5.htm">Intake</a> and saved in global cache.
            Note though that such deferral affects performance as well as memory footprint; and in case of limited buffer sizes may lead to deadlocks.</p> 
            If not supplied, Data Conveyer assumes default function that does not make any updates and returns true, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBDATCDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDATCDA','cs','1','2');return false;">C#</a></div><div id="ID0EBDATCDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDATCDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBDATCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBDATCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBDATCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">(rec, tb) =&gt; <span class="highlight-keyword">true</span></pre></div><div id="ID0EBDATCDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(rec, tb) <span class="highlight-keyword">True</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBDATCDA");</script>
            Any exception thrown by this function will cause the process shutdown with a completion status of <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">Failed</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e8f1a9ae-ec5e-e1df-6f80-4ac5b3018ad5.htm">RecordRouter</a></td><td><div class="summary">
            A function to determine the output target for a given record. It receives an output record and a cluster that contains the record and returns TargetNo to be assigned to the record (Func&lt;IRecord, ICluster, int&gt;).
            This function is specific to <a href="93f44cd4-deda-0169-7f87-aafedcd47f9d.htm">PerRecord</a> router type; it is ignored for other router types.  If not supplied, a default function that returns 1 for every record is assumed, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBDASCDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDASCDA','cs','1','2');return false;">C#</a></div><div id="ID0EBDASCDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDASCDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBDASCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBDASCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBDASCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">(rec, clstr) =&gt; <span class="highlight-number">1</span></pre></div><div id="ID0EBDASCDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(rec, clstr) <span class="highlight-number">1</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBDASCDA");</script>
            Any exception thrown by this function will cause the process shutdown with a completion status of <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">Failed</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="4e69b3f3-dd04-ca51-1b59-b55a877af902.htm">RepeatLeaders</a></td><td><div class="summary">
            Relevant only if multiple output targets are present and <a href="73dad4d7-ac76-f2f7-bcc8-a9b50f0619b1.htm">LeaderContents</a> is not null.
            If true (default), then the trailer rows will be send to all output targets after sending data rows.
            If false, then the trailer rows  will only be sent the last output target (typically the one with the highest TargetNo, but it can actually be any target).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="84791243-69f4-4a67-a2af-82bbd171a484.htm">RepeatOutputHeaders</a></td><td><div class="summary">
            Relevant only if multiple output targets are present and <a href="22cd49e1-52d1-0c18-ad88-ed29a613755a.htm">HeadersInFirstOutputRow</a> is true.
            If true (default), then the header row will be sent to all output targets before sending data rows.
            If false, then the header row will only be sent the first output target (typically the one with TargetNo=1, but it can actually be any target).
            <i>Note that all output targets are subjected to the same set of processing rules, which implies that the same header row applies to all targets regardless if it's repeated for all sources or not.</i></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="2bfd3eaa-f241-3e80-ec57-c8ed0a3310e1.htm">RepeatTrailers</a></td><td><div class="summary">
            Relevant only if multiple output targets are present and <a href="e2ccc5eb-80d3-fef8-a169-8230f010b9e4.htm">TrailerContents</a> is not null.
            If true (default), then the trailer rows will be send to all output targets after sending data rows.
            If false, then the trailer rows  will only be sent the last output target (typically the one with the highest TargetNo, but it can actually be any target).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="79e45b3c-23e2-3d55-32be-94d91257ec51.htm">ReportProgress</a></td><td><div class="summary">
            True causes Data Conveyer to raise progress events, i.e. PhaseStarted, PhaseFinished and (if ProgressInterval other than 0) ProgressChanged.
            If false (default), then no progress events occur.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="ecdd0c23-bc48-9c82-79c0-b71221563f84.htm">RetainQuotes</a></td><td><div class="summary">
            True will keep double quotes surrounding values if any; false (default) will strip surrounding quotes.
            Note that quotes are stripped before possible trimming; so unless quote is the very 1st character, quotes will be retained regardless of this setting.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="93717839-e093-50bb-b21f-bf4f6fe116d0.htm">RouterType</a></td><td><div class="summary">
            Type of router that determines the output target. One of: SingleTarget (default), SourceToTarget, PerCluster or PerRecord.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7.htm">TextIntakeSupplier</a></td><td><div class="summary">
             A function that supplies contents of a single text line to be fed into Data Conveyer. (Func&lt;string&gt;).
             When end of data is reached, the function must return null (end of data mark).
             The <a href="fdcbd0c3-0493-42f7-8927-2f28ba0e1fe7.htm">TextIntakeSupplier</a> function is a simplified version of the <a href="d0964933-c9df-f7d7-4214-a03368264589.htm">IntakeSupplier</a> function where the following restrictions apply:
             <ul><li>Input data kind is textual such as <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Delimited</a>, <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Flat</a>, etc. (and not for example <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a>).</li><li>All lines are associated with a single source.</li><li>No access to global cache.</li></ul></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6a9be6bf-d527-c86a-2fdc-e501a528091a.htm">TextOutputConsumer</a></td><td><div class="summary">
             An action (void function) that consumes a single line of text received from Data Conveyer. (Action&lt;string&gt;).
             The last line sent by Data Conveyer is always null (end of data mark).
             The <a href="6a9be6bf-d527-c86a-2fdc-e501a528091a.htm">TextOutputConsumer</a> action is a simplified version of the <a href="925463ba-ed7f-0aa6-b51c-ee9fc0e552d5.htm">OutputConsumer</a> action where the following restrictions apply:
             <ul><li>Output data kind is textual such as <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Delimited</a>, <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">Flat</a>, etc. (and not for example <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a>).</li><li>All lines are sent to a single target (regardless of the target determined by the <a href="69304476-149c-7a60-5f05-8cb8f6652b75.htm">ClusterRouter</a> function).</li><li>No access to global cache.</li></ul></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="5912fbd7-9565-4e0b-23ab-ff18bcf9f82f.htm">TimeLimit</a></td><td><div class="summary">
            Maximum amount of time allowed for the process execution. Default value is -1 ms, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBAAJCDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBAAJCDA','cs','1','2');return false;">C#</a></div><div id="ID0EBAAJCDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBAAJCDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBAAJCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBAAJCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBAAJCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Timeout.InfiniteTimeSpan</pre></div><div id="ID0EBAAJCDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">Timeout.InfiniteTimeSpan</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBAAJCDA");</script></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e2ccc5eb-80d3-fef8-a169-8230f010b9e4.htm">TrailerContents</a></td><td><div class="summary">
            Data, if any, to be sent to output after the last output line; may be multi-line.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="c2fb2589-c230-2f3f-d041-7a38a5a4fd1d.htm">TransformBufferFactor</a></td><td><div class="summary">
            Ratio between sizes of the transformer's output and input buffers (transformer's input buffer size is defined by the <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a> setting).
            This advanced setting allows fine-tuning of memory consumption by Data Conveyer.
            For example, if transformation process is expected to remove (filter out) on average every other cluster, then it may be sensible to set transformer's input buffer size to 100 clusters
             and the transformer's output buffer size to 50 clusters.  In this case, <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a> = 100 and <a href="c2fb2589-c230-2f3f-d041-7a38a5a4fd1d.htm">TransformBufferFactor</a> = 0.5.
            Default value for <a href="310ead30-4b34-2237-38f8-9dc807c34ee3.htm">IntakeBufferFactor</a> is 1.0.
            This setting is respected only if <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a> is set to a positive value (i.e. ignored in case of <a href="80dd7bcd-20ae-25a7-b980-1fcd89f4a1db.htm">BufferSize</a>'s default value of -1 (Unlimited)).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="c125a74f-d208-d540-d050-6b9f41ba407c.htm">TransformerType</a></td><td><div class="summary">
            Type of the transformer: Clusterbound, Recordbound, ClusterFilter, RecordFilter or Universal.  Default transformer type is Recordbound.
            The Aggregator type is designated for future use.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="432d68aa-e827-528c-cb90-6b579b2f9d84.htm">TrimInputValues</a></td><td><div class="summary">
            True means leading and trailing spaces will be trimmed from values encountered during intake; default is false meaning all spaces are preserved.
            Note that <a href="ecdd0c23-bc48-9c82-79c0-b71221563f84.htm">RetainQuotes</a> = true will prevent trimming of quoted values.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f505e930-f139-60ce-b7ec-28f2f26ec154.htm">TrimOutputValues</a></td><td><div class="summary">
            True means that leading and trailing spaces will be trimmed from output values. False (default) means that all spaces are preserved.
            Values get trimmed before surrounding in quotes (per <a href="b5ecdf86-99ae-2f24-f21e-44ee77b68b45.htm">QuotationMode</a> setting).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e3d51c4b-3110-47b3-ffd9-c852396dc2b2.htm">TypeDefiner</a></td><td><div class="summary">
            A function to determine data types for those fields that are not listed in <a href="2060aefd-96d9-5761-f0cb-5436e51c4f53.htm">ExplicitTypeDefinitions</a>.
            The function takes a field name and returns an ItemDef consisting of a type and format for the field.
            Default function assumes every field is of string type and has no format, i.e.:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBDADCDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDADCDA','cs','1','2');return false;">C#</a></div><div id="ID0EBDADCDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBDADCDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBDADCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBDADCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBDADCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">fn =&gt; <span class="highlight-keyword">new</span> ItemDef(ItemType.String, <span class="highlight-keyword">null</span>)</pre></div><div id="ID0EBDADCDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(fn) <span class="highlight-keyword">New</span> ItemDef(ItemType.[<span class="highlight-keyword">String</span>], <span class="highlight-keyword">Nothing</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBDADCDA");</script>
            Any exception thrown by this function will cause the process shutdown with a completion status of <a href="4aa931b3-8c02-c49c-9d14-9a06c2fe432f.htm">Failed</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="aedd3e4d-dcaf-a394-4172-fe4497a400d8.htm">UniversalTransformer</a></td><td><div class="summary">
             A function that  takes a single cluster and returns a sequence of clusters; specific to <a href="ab960898-7287-fb62-44a2-925659cb5b10.htm">Universal</a> transformer type.
             If not supplied, a default pass-through function is used that passes input cluster to output as a single element enumerable, i.e.:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBACCDA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBACCDA','cs','1','2');return false;">C#</a></div><div id="ID0EBBACCDA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBACCDA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBACCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBACCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBACCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">clstr =&gt; Enumerable.Repeat(clstr, <span class="highlight-number">1</span>)</pre></div><div id="ID0EBBACCDA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Function</span>(clstr) Enumerable.Repeat(clstr, <span class="highlight-number">1</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBACCDA");</script>
             Any exception thrown by this function will cause the process shutdown (CompletionStatus of Failed).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="dd4afb07-48b0-9524-14a0-93ed2169af49.htm">XmlJsonIntakeSettings</a></td><td><div class="summary">
            A string containing comma-separated paraketers for parsing <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a> data on intake.
            Each such parameter is a key-value pair with a pipe symbol (|) separating the key and the value.
            The parameters reflect the shape of data to parse and define the elements to be extracted.
            There are some differences (explained below) in their interpretation in case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> vs <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>.
            The following keys can be used:
            <ul><li><strong>CollectionNode</strong> - 
                  "xpath" to the collection of clusters (or records if the ClusterNode parameter is absent).
                  If this parameter is absent for <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a>, then intake is expected to contain XML fragment where each root constitutes a record or a cluster.
                  In case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>, absent or empty value generally means an array instead of an object.
                </li><li><strong>ClusterNode</strong> - 
                  "xpath" to the cluster node within the collection node. Records within a cluster node will be assigned the same cluster number (sequential).
                  If this parameter is absent, then all records will be assigned a cluster number of 0 (undetermined) and the clusters will
                  be determined solely by the <a href="d68e844c-3622-d074-f890-14cceba69557.htm">ClusterMarker</a> function.
                </li><li><strong>RecordNode</strong> - 
                  "xpath" to the record node within the cluster node (or the collection node if the cluster node is empty).
                  The RecordNode parameter cannot be absent, although in case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>, it can be empty.
                </li><li><strong>IncludeExplicitText</strong> - <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> only, ignored in case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>. true to include explicit text inside record nodes in XML data; false (default) to ignore explicit text.
                  Explicit text is the text contained directly inside an XML element that represents the record node; this is not typically expected.
                  Data Conveyer assigns a special key of "__explicitText__" to explicit text in the record node.
                </li><li><strong>IncludeAttributes</strong> - <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> only, ignored in case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>. true to include attributes (the key of the corresponding item will be prefixed by @); truePlain to include attributes (without prefix in item key); false (default) to ignore explicit text.
                  It is generally recommended that the keys (names) of items that originate from XML attributes be prepended with @; therefore setting of true is preferred over truePlain.
                  In the latter case, name conflicts are possible between items originating from attributes and inner nodes. 
                </li></ul><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
            "xpath" in any of the node parameters is a simplified version of the xpath syntax.
            It is always relative to the containing node (no need for ./).
            </p><p>
            In case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>, it contains names of nodes (nested in the node hierarchy) separated by /.
            Empty nodes are allowed, in which case the intake is expected to contain an array at a given hierarchy level.
            </p><p>
            In case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a>, each node can contain attributes. For example, "xpath" of "Department[@name=\"QA\"]/Employees" can be used to identify employees of the QA department.
            Empty nodes are not allowed and the // syntax is not supported.
            </p></td></tr></table></div><p><b>Example 1:</b><span class="code">"CollectionNode|Members,RecordNode|Member"</span><i>(<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>)</i></p><p><b>Example 2:</b><span class="code">"CollectionNode|Root/Members,ClusterNode|Group/FamilyRecordNode|Member"</span><i>(<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>)</i></p><p><b>Example 3:</b><span class="code">"RecordNode|row"</span><i>(XML fragment or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a> object with an array)</i></p><p><b>Example 4:</b><span class="code">"CollectionNode|,RecordNode|"</span><i>(<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a> only - an array of objects=records)</i></p><p><b>Example 5:</b><span class="code">"ClusterNode|,RecordNode|"</span><i>(<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a> only - an array of arrays=clusters of objects=records)</i></p><p><b>Example 6:</b><span class="code">"RecordNode|"</span><i>(<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a> only - multiple objects containing records)</i></p><p><b>Example 7:</b><span class="code">"CollectionNode|Root/Members[@region=\"North\"],ClusterNode|Group[@id=2][@zone=\"\"]/Family,RecordNode|Data/Member[@class],IncludeExplicitText|true"</span><i>(<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> only)</i></p><p>This configuration setting is only applicable when <a href="c8ef008d-8051-63fb-3f0f-f6101905b2d4.htm">InputDataKind</a> value is <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>.</p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="b0a7bc2a-2c8a-26f5-e139-73d8f4eae1b2.htm">XmlJsonOutputSettings</a></td><td><div class="summary">
            A string containing comma separated parameters for writing <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a> data on output.
            Each such parameter is a key-value pair with a pipe symbol (|) separating the key and the value.
            The parameters define the shape of data to write.
            There are some differences (explained below) in their interpretation in case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> vs <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>.
            The following keys can be used:
            <ul><li><strong>CollectionNode</strong> - 
                  "xpath" defining the collection of clusters (or records if the ClusterNode parameter is absent).
                  If this parameter is absent for <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a>, then output will contain XML fragment where each root constitutes a record or a cluster.
                  In case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>, absent or empty value generally means an array instead of an object.
                </li><li><strong>ClusterNode</strong> - 
                  "xpath" to the cluster node within the collection node. Records with the same cluster number will be placed inside the same cluster node.
                  If this parameter is absent, then all records will be placed directly in the collection node regardless of their cluster number.
                </li><li><strong>RecordNode</strong> - 
                  "xpath" to the record node within the cluster node (or the collection node if the cluster node is empty).
                  In case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> this parameter is required; if absent or empty, a default value of "__record__" will be assumed.
                  In case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a> this parameter can be empty (or even absent if CollectionNode and ClusterNode are also empty - special case to output multiple objects containing records).
                </li><li><strong>AttributeFields</strong> - <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> only, ignored in case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>.
                  A semi-colon separated list of field names (item keys) to be projected as attributes of the record node (and not inner nodes).
                  In addition, all fields with names starting with @ will be projected as attributes of the record node (the @ will not be removed from the attribute name).
                </li><li><strong>IndentChars</strong> - 
                  A string to use when indenting, e.g. "\t" or "  ". This parameter allows to "pretty-print" the output. When absent, no indenting takes place.
                  Note that in case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>, the only sensible value for this parameter contains a string containg a single character (possibly repeated,
                  e.g. "   " or "\t"; if different characters are used (e.g. " \t" i.e. a space and a tab), then the output may not be as expected.
                </li><li><strong>NewLineChars</strong> - <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> only, ignored in case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>. Characters to use for line breaks (to "pretty-print" the <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> output).</li></ul><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
            "xpath" in any of the node parameters is a simplified version of the xpath syntax.
            It is always relative to the containing node (no need for ./).
            </p><p>
            In case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>, it contains names of the nodes (nested in the node hierarchy) separated by /.
            Empty nodes are allowed, in which case the output at a given hierarchy level consist of an array instead of an object containing an array.
            Special case: when CollectionNode, ClusterNode and RecordNode are all absent, then output will consist of multiple objects containing records.
            </p><p>
            In case of <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a>, empty nodes are not allowed. In addition, node names must be valid XML names (notes that certain
            characters, such as spaces, are not allowed in XML even though they are allowed in JSON).
            Attributes can be specified, but must include both name and value. In such cases,
            an attribute will be added to the node on output. Care needs to be taken in case of attributes of the record node to avoid name duplicates with the
            records fields (when AttributeFields parameter is used).
            </p></td></tr></table></div><p><b>Example 1:</b><span class="code">"CollectionNode|Members,RecordNode|Member,IndentChars|  "</span><i>(<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>)</i></p><p><b>Example 2:</b><span class="code">"RecordNode|Member,IndentChars|\t"</span><i>(XML or JSON)</i></p><p><b>Example 3:</b><span class="code">"CollectionNode|Root/Members,ClusterNode|Group/Subgroup/Family,RecordNode|Data/Member"</span><i>(<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>)</i></p><p><b>Example 4:</b><span class="code">"RecordNode|,IndentChars|  "</span><i>(<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a> only - an array of object containing records)</i></p><p><b>Example 5:</b><span class="code">"ClusterNode|,RecordNode|"</span><i>(<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a> only - an array of arrays=clusters of objects=records)</i></p><p><b>Example 6:</b><span class="code">""</span><i>(JSON only - all node parameters absent is a special case that results in multiple objects containing records)</i></p><p><b>Example 7:</b><span class="code">"CollectionNode|Root/Members[@region=North],ClusterNode|Group[@id=2][@zone=\"\"]/Family,RecordNode|Data/Member[@class=\"main\"],AttributeFields|ID;zone"</span><i>(<a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> only)</i></p><p>This configuration setting is only applicable when <a href="be0694f4-b3c0-1603-888b-29c080c5c446.htm">OutputDataKind</a> value is <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">XML</a> or <a href="3a060217-e38a-2399-3897-477fb3fc466e.htm">JSON</a>.</p></div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="04d12393-dc8d-bb65-d2df-fe7254cc5deb.htm">OrchestratorConfig Class</a></div><div class="seeAlsoStyle"><a href="a3dd73ed-88ee-29a7-7b04-78e75f7220ab.htm">Mavidian.DataConveyer.Orchestrators Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 2016-2019 Mavidian Technologies Limited Liability Company. All Rights Reserved.</p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:contact%40mavidian.com?Subject=Data%20Conveyer%20Documentation">contact@mavidian.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>